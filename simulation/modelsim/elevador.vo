// Copyright (C) 2020  Intel Corporation. All rights reserved.
// Your use of Intel Corporation's design tools, logic functions 
// and other software and tools, and any partner logic 
// functions, and any output files from any of the foregoing 
// (including device programming or simulation files), and any 
// associated documentation or information are expressly subject 
// to the terms and conditions of the Intel Program License 
// Subscription Agreement, the Intel Quartus Prime License Agreement,
// the Intel FPGA IP License Agreement, or other applicable license
// agreement, including, without limitation, that your use is for
// the sole purpose of programming logic devices manufactured by
// Intel and sold by Intel or its authorized distributors.  Please
// refer to the applicable agreement for further details, at
// https://fpgasoftware.intel.com/eula.

// VENDOR "Altera"
// PROGRAM "Quartus Prime"
// VERSION "Version 20.1.1 Build 720 11/11/2020 SJ Lite Edition"

// DATE "12/11/2024 17:32:12"

// 
// Device: Altera EPM240T100C5 Package TQFP100
// 

// 
// This Verilog file should be used for ModelSim (Verilog) only
// 

`timescale 1 ps/ 1 ps

module Main (
	clk,
	AI1,
	AI2,
	AI3,
	AE1,
	AE2,
	AE3,
	B1,
	B2,
	reset0,
	disp,
	Y,
	C,
	P,
	port,
	saidaMot);
input 	clk;
input 	AI1;
input 	AI2;
input 	AI3;
input 	AE1;
input 	AE2;
input 	AE3;
input 	B1;
input 	B2;
input 	reset0;
output 	[7:0] disp;
output 	[3:0] Y;
output 	C;
output 	P;
output 	[3:0] port;
output 	[1:0] saidaMot;

// Design Ports Information


wire gnd;
wire vcc;
wire unknown;

assign gnd = 1'b0;
assign vcc = 1'b1;
assign unknown = 1'bx;

tri1 devclrn;
tri1 devpor;
tri1 devoe;
wire \clk~combout ;
wire \divisor1s|counter[0]~49 ;
wire \divisor1s|counter[0]~49COUT1_51 ;
wire \divisor1s|counter[1]~47 ;
wire \divisor1s|counter[2]~45 ;
wire \divisor1s|counter[2]~45COUT1_52 ;
wire \divisor1s|counter[3]~43 ;
wire \divisor1s|counter[3]~43COUT1_53 ;
wire \divisor1s|counter[4]~41 ;
wire \divisor1s|counter[4]~41COUT1_54 ;
wire \divisor1s|counter[5]~39 ;
wire \divisor1s|counter[5]~39COUT1_55 ;
wire \divisor1s|counter[6]~15 ;
wire \divisor1s|counter[7]~17 ;
wire \divisor1s|counter[7]~17COUT1_56 ;
wire \divisor1s|counter[8]~19 ;
wire \divisor1s|counter[8]~19COUT1_57 ;
wire \divisor1s|counter[9]~21 ;
wire \divisor1s|counter[9]~21COUT1_58 ;
wire \divisor1s|counter[10]~23 ;
wire \divisor1s|counter[10]~23COUT1_59 ;
wire \divisor1s|counter[11]~7 ;
wire \divisor1s|counter[12]~9 ;
wire \divisor1s|counter[12]~9COUT1_60 ;
wire \divisor1s|counter[13]~11 ;
wire \divisor1s|counter[13]~11COUT1_61 ;
wire \divisor1s|counter[14]~13 ;
wire \divisor1s|counter[14]~13COUT1_62 ;
wire \divisor1s|counter[15]~1 ;
wire \divisor1s|counter[15]~1COUT1_63 ;
wire \divisor1s|counter[16]~25 ;
wire \divisor1s|counter[17]~3 ;
wire \divisor1s|counter[17]~3COUT1_64 ;
wire \divisor1s|counter[18]~27 ;
wire \divisor1s|counter[18]~27COUT1_65 ;
wire \divisor1s|counter[19]~29 ;
wire \divisor1s|counter[19]~29COUT1_66 ;
wire \divisor1s|counter[20]~31 ;
wire \divisor1s|counter[20]~31COUT1_67 ;
wire \divisor1s|counter[21]~33 ;
wire \divisor1s|counter[22]~35 ;
wire \divisor1s|counter[22]~35COUT1_68 ;
wire \divisor1s|counter[23]~5 ;
wire \divisor1s|counter[23]~5COUT1_69 ;
wire \divisor1s|LessThan0~4_combout ;
wire \divisor1s|LessThan0~5_combout ;
wire \divisor1s|LessThan0~0_combout ;
wire \divisor1s|LessThan0~1_combout ;
wire \divisor1s|LessThan0~2_combout ;
wire \divisor1s|LessThan0~3_combout ;
wire \divisor1s|LessThan0~6_combout ;
wire \divisor1s|clock_out~regout ;
wire \B1~combout ;
wire \B2~combout ;
wire \pessoas|nextstate~0_combout ;
wire \pessoas|always1~0_combout ;
wire \pessoas|Selector2~0_combout ;
wire \reset0~combout ;
wire \pessoas|state.S2~regout ;
wire \pessoas|Selector3~0_combout ;
wire \pessoas|state.S3~regout ;
wire \pessoas|Selector4~0_combout ;
wire \pessoas|state.S4~regout ;
wire \pessoas|Selector5~0_combout ;
wire \pessoas|state.S5~regout ;
wire \pessoas|Selector6~0_combout ;
wire \pessoas|state.S6~regout ;
wire \pessoas|state.S7~regout ;
wire \AI2~combout ;
wire \AE2~combout ;
wire \chamada|A1~combout ;
wire \AI1~combout ;
wire \AE1~combout ;
wire \andar|always1~0_combout ;
wire \AE3~combout ;
wire \AI3~combout ;
wire \andar|mot~3_combout ;
wire \andar|mot~2_combout ;
wire \andar|Selector1~2_combout ;
wire \andar|state.S1~regout ;
wire \elevador|always1~0_combout ;
wire \andar|state.S2~regout ;
wire \elevador|Selector1~0_combout ;
wire \andar|always1~1_combout ;
wire \andar|Selector0~0_combout ;
wire \andar|state.S0~regout ;
wire \elevador|always1~2_combout ;
wire \elevador|always1~1_combout ;
wire \elevador|state.S0~regout ;
wire \elevador|always1~3_combout ;
wire \elevador|Selector1~1_combout ;
wire \elevador|state.S1~regout ;
wire \elevador|state.S2~regout ;
wire \porta|always1~0_combout ;
wire \porta|state.S2~regout ;
wire \porta|state.S0~regout ;
wire \porta|state.S1~regout ;
wire \porta|state.S3~regout ;
wire \pessoas|nextstate~1_combout ;
wire \pessoas|state.S0~regout ;
wire \pessoas|Selector1~0_combout ;
wire \pessoas|state.S1~regout ;
wire \pessoas|WideOr9~0_combout ;
wire \pessoas|WideOr8~0_combout ;
wire \pessoas|WideOr10~0_combout ;
wire \multiplexe|disp[0]~0_combout ;
wire \fazmux|counter[0]~23 ;
wire \fazmux|counter[1]~1 ;
wire \fazmux|counter[1]~1COUT1_25 ;
wire \fazmux|counter[2]~3 ;
wire \fazmux|counter[2]~3COUT1_26 ;
wire \fazmux|counter[3]~5 ;
wire \fazmux|counter[3]~5COUT1_27 ;
wire \fazmux|counter[4]~7 ;
wire \fazmux|counter[4]~7COUT1_28 ;
wire \fazmux|counter[5]~9 ;
wire \fazmux|counter[6]~11 ;
wire \fazmux|counter[6]~11COUT1_29 ;
wire \fazmux|counter[7]~13 ;
wire \fazmux|counter[7]~13COUT1_30 ;
wire \fazmux|counter[8]~15 ;
wire \fazmux|counter[8]~15COUT1_31 ;
wire \fazmux|counter[9]~21 ;
wire \fazmux|counter[9]~21COUT1_32 ;
wire \fazmux|counter[10]~17 ;
wire \fazmux|LessThan0~2_combout ;
wire \fazmux|LessThan0~1_combout ;
wire \fazmux|LessThan0~0_combout ;
wire \fazmux|LessThan0~3_combout ;
wire \fazmux|clock_out~regout ;
wire \multiplexe|disp[0]~1_combout ;
wire \multiplexe|pessoa[1]~0_combout ;
wire \multiplexe|disp[2]~2_combout ;
wire \multiplexe|disp[2]~3_combout ;
wire \multiplexe|disp[3]~4_combout ;
wire \multiplexe|disp[3]~5_combout ;
wire \multiplexe|disp[4]~6_combout ;
wire \multiplexe|disp[4]~7_combout ;
wire \multiplexe|disp[5]~8_combout ;
wire \multiplexe|disp[5]~9_combout ;
wire \multiplexe|disp[6]~10_combout ;
wire \multiplexe|disp[6]~11_combout ;
wire \porta|saida~0_combout ;
wire \porta|saida~1_combout ;
wire \andar|nextstate~0_combout ;
wire \andar|mot~4_combout ;
wire [11:0] \fazmux|counter ;
wire [24:0] \divisor1s|counter ;
wire [1:0] \andar|mot ;


// Location: PIN_12,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \clk~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\clk~combout ),
	.padio(clk));
// synopsys translate_off
defparam \clk~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X3_Y1_N3
maxii_lcell \divisor1s|counter[0] (
// Equation(s):
// \divisor1s|counter [0] = DFFEAS((!\divisor1s|counter [0]), GLOBAL(\clk~combout ), VCC, , , , , \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[0]~49  = CARRY((\divisor1s|counter [0]))
// \divisor1s|counter[0]~49COUT1_51  = CARRY((\divisor1s|counter [0]))

	.clk(\clk~combout ),
	.dataa(\divisor1s|counter [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [0]),
	.cout(),
	.cout0(\divisor1s|counter[0]~49 ),
	.cout1(\divisor1s|counter[0]~49COUT1_51 ));
// synopsys translate_off
defparam \divisor1s|counter[0] .lut_mask = "55aa";
defparam \divisor1s|counter[0] .operation_mode = "arithmetic";
defparam \divisor1s|counter[0] .output_mode = "reg_only";
defparam \divisor1s|counter[0] .register_cascade_mode = "off";
defparam \divisor1s|counter[0] .sum_lutc_input = "datac";
defparam \divisor1s|counter[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y1_N4
maxii_lcell \divisor1s|counter[1] (
// Equation(s):
// \divisor1s|counter [1] = DFFEAS(\divisor1s|counter [1] $ ((((\divisor1s|counter[0]~49 )))), GLOBAL(\clk~combout ), VCC, , , , , \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[1]~47  = CARRY(((!\divisor1s|counter[0]~49COUT1_51 )) # (!\divisor1s|counter [1]))

	.clk(\clk~combout ),
	.dataa(\divisor1s|counter [1]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(\divisor1s|counter[0]~49 ),
	.cin1(\divisor1s|counter[0]~49COUT1_51 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [1]),
	.cout(\divisor1s|counter[1]~47 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divisor1s|counter[1] .cin0_used = "true";
defparam \divisor1s|counter[1] .cin1_used = "true";
defparam \divisor1s|counter[1] .lut_mask = "5a5f";
defparam \divisor1s|counter[1] .operation_mode = "arithmetic";
defparam \divisor1s|counter[1] .output_mode = "reg_only";
defparam \divisor1s|counter[1] .register_cascade_mode = "off";
defparam \divisor1s|counter[1] .sum_lutc_input = "cin";
defparam \divisor1s|counter[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y1_N5
maxii_lcell \divisor1s|counter[2] (
// Equation(s):
// \divisor1s|counter [2] = DFFEAS(\divisor1s|counter [2] $ ((((!\divisor1s|counter[1]~47 )))), GLOBAL(\clk~combout ), VCC, , , , , \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[2]~45  = CARRY((\divisor1s|counter [2] & ((!\divisor1s|counter[1]~47 ))))
// \divisor1s|counter[2]~45COUT1_52  = CARRY((\divisor1s|counter [2] & ((!\divisor1s|counter[1]~47 ))))

	.clk(\clk~combout ),
	.dataa(\divisor1s|counter [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[1]~47 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [2]),
	.cout(),
	.cout0(\divisor1s|counter[2]~45 ),
	.cout1(\divisor1s|counter[2]~45COUT1_52 ));
// synopsys translate_off
defparam \divisor1s|counter[2] .cin_used = "true";
defparam \divisor1s|counter[2] .lut_mask = "a50a";
defparam \divisor1s|counter[2] .operation_mode = "arithmetic";
defparam \divisor1s|counter[2] .output_mode = "reg_only";
defparam \divisor1s|counter[2] .register_cascade_mode = "off";
defparam \divisor1s|counter[2] .sum_lutc_input = "cin";
defparam \divisor1s|counter[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y1_N6
maxii_lcell \divisor1s|counter[3] (
// Equation(s):
// \divisor1s|counter [3] = DFFEAS(\divisor1s|counter [3] $ (((((!\divisor1s|counter[1]~47  & \divisor1s|counter[2]~45 ) # (\divisor1s|counter[1]~47  & \divisor1s|counter[2]~45COUT1_52 ))))), GLOBAL(\clk~combout ), VCC, , , , , \divisor1s|LessThan0~6_combout 
// , )
// \divisor1s|counter[3]~43  = CARRY(((!\divisor1s|counter[2]~45 )) # (!\divisor1s|counter [3]))
// \divisor1s|counter[3]~43COUT1_53  = CARRY(((!\divisor1s|counter[2]~45COUT1_52 )) # (!\divisor1s|counter [3]))

	.clk(\clk~combout ),
	.dataa(\divisor1s|counter [3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[1]~47 ),
	.cin0(\divisor1s|counter[2]~45 ),
	.cin1(\divisor1s|counter[2]~45COUT1_52 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [3]),
	.cout(),
	.cout0(\divisor1s|counter[3]~43 ),
	.cout1(\divisor1s|counter[3]~43COUT1_53 ));
// synopsys translate_off
defparam \divisor1s|counter[3] .cin0_used = "true";
defparam \divisor1s|counter[3] .cin1_used = "true";
defparam \divisor1s|counter[3] .cin_used = "true";
defparam \divisor1s|counter[3] .lut_mask = "5a5f";
defparam \divisor1s|counter[3] .operation_mode = "arithmetic";
defparam \divisor1s|counter[3] .output_mode = "reg_only";
defparam \divisor1s|counter[3] .register_cascade_mode = "off";
defparam \divisor1s|counter[3] .sum_lutc_input = "cin";
defparam \divisor1s|counter[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y1_N7
maxii_lcell \divisor1s|counter[4] (
// Equation(s):
// \divisor1s|counter [4] = DFFEAS((\divisor1s|counter [4] $ ((!(!\divisor1s|counter[1]~47  & \divisor1s|counter[3]~43 ) # (\divisor1s|counter[1]~47  & \divisor1s|counter[3]~43COUT1_53 )))), GLOBAL(\clk~combout ), VCC, , , , , \divisor1s|LessThan0~6_combout 
// , )
// \divisor1s|counter[4]~41  = CARRY(((\divisor1s|counter [4] & !\divisor1s|counter[3]~43 )))
// \divisor1s|counter[4]~41COUT1_54  = CARRY(((\divisor1s|counter [4] & !\divisor1s|counter[3]~43COUT1_53 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\divisor1s|counter [4]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[1]~47 ),
	.cin0(\divisor1s|counter[3]~43 ),
	.cin1(\divisor1s|counter[3]~43COUT1_53 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [4]),
	.cout(),
	.cout0(\divisor1s|counter[4]~41 ),
	.cout1(\divisor1s|counter[4]~41COUT1_54 ));
// synopsys translate_off
defparam \divisor1s|counter[4] .cin0_used = "true";
defparam \divisor1s|counter[4] .cin1_used = "true";
defparam \divisor1s|counter[4] .cin_used = "true";
defparam \divisor1s|counter[4] .lut_mask = "c30c";
defparam \divisor1s|counter[4] .operation_mode = "arithmetic";
defparam \divisor1s|counter[4] .output_mode = "reg_only";
defparam \divisor1s|counter[4] .register_cascade_mode = "off";
defparam \divisor1s|counter[4] .sum_lutc_input = "cin";
defparam \divisor1s|counter[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y1_N8
maxii_lcell \divisor1s|counter[5] (
// Equation(s):
// \divisor1s|counter [5] = DFFEAS(\divisor1s|counter [5] $ (((((!\divisor1s|counter[1]~47  & \divisor1s|counter[4]~41 ) # (\divisor1s|counter[1]~47  & \divisor1s|counter[4]~41COUT1_54 ))))), GLOBAL(\clk~combout ), VCC, , , , , \divisor1s|LessThan0~6_combout 
// , )
// \divisor1s|counter[5]~39  = CARRY(((!\divisor1s|counter[4]~41 )) # (!\divisor1s|counter [5]))
// \divisor1s|counter[5]~39COUT1_55  = CARRY(((!\divisor1s|counter[4]~41COUT1_54 )) # (!\divisor1s|counter [5]))

	.clk(\clk~combout ),
	.dataa(\divisor1s|counter [5]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[1]~47 ),
	.cin0(\divisor1s|counter[4]~41 ),
	.cin1(\divisor1s|counter[4]~41COUT1_54 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [5]),
	.cout(),
	.cout0(\divisor1s|counter[5]~39 ),
	.cout1(\divisor1s|counter[5]~39COUT1_55 ));
// synopsys translate_off
defparam \divisor1s|counter[5] .cin0_used = "true";
defparam \divisor1s|counter[5] .cin1_used = "true";
defparam \divisor1s|counter[5] .cin_used = "true";
defparam \divisor1s|counter[5] .lut_mask = "5a5f";
defparam \divisor1s|counter[5] .operation_mode = "arithmetic";
defparam \divisor1s|counter[5] .output_mode = "reg_only";
defparam \divisor1s|counter[5] .register_cascade_mode = "off";
defparam \divisor1s|counter[5] .sum_lutc_input = "cin";
defparam \divisor1s|counter[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y1_N9
maxii_lcell \divisor1s|counter[6] (
// Equation(s):
// \divisor1s|counter [6] = DFFEAS((\divisor1s|counter [6] $ ((!(!\divisor1s|counter[1]~47  & \divisor1s|counter[5]~39 ) # (\divisor1s|counter[1]~47  & \divisor1s|counter[5]~39COUT1_55 )))), GLOBAL(\clk~combout ), VCC, , , , , \divisor1s|LessThan0~6_combout 
// , )
// \divisor1s|counter[6]~15  = CARRY(((\divisor1s|counter [6] & !\divisor1s|counter[5]~39COUT1_55 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\divisor1s|counter [6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[1]~47 ),
	.cin0(\divisor1s|counter[5]~39 ),
	.cin1(\divisor1s|counter[5]~39COUT1_55 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [6]),
	.cout(\divisor1s|counter[6]~15 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divisor1s|counter[6] .cin0_used = "true";
defparam \divisor1s|counter[6] .cin1_used = "true";
defparam \divisor1s|counter[6] .cin_used = "true";
defparam \divisor1s|counter[6] .lut_mask = "c30c";
defparam \divisor1s|counter[6] .operation_mode = "arithmetic";
defparam \divisor1s|counter[6] .output_mode = "reg_only";
defparam \divisor1s|counter[6] .register_cascade_mode = "off";
defparam \divisor1s|counter[6] .sum_lutc_input = "cin";
defparam \divisor1s|counter[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N0
maxii_lcell \divisor1s|counter[7] (
// Equation(s):
// \divisor1s|counter [7] = DFFEAS((\divisor1s|counter [7] $ ((\divisor1s|counter[6]~15 ))), GLOBAL(\clk~combout ), VCC, , , , , \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[7]~17  = CARRY(((!\divisor1s|counter[6]~15 ) # (!\divisor1s|counter [7])))
// \divisor1s|counter[7]~17COUT1_56  = CARRY(((!\divisor1s|counter[6]~15 ) # (!\divisor1s|counter [7])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\divisor1s|counter [7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[6]~15 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [7]),
	.cout(),
	.cout0(\divisor1s|counter[7]~17 ),
	.cout1(\divisor1s|counter[7]~17COUT1_56 ));
// synopsys translate_off
defparam \divisor1s|counter[7] .cin_used = "true";
defparam \divisor1s|counter[7] .lut_mask = "3c3f";
defparam \divisor1s|counter[7] .operation_mode = "arithmetic";
defparam \divisor1s|counter[7] .output_mode = "reg_only";
defparam \divisor1s|counter[7] .register_cascade_mode = "off";
defparam \divisor1s|counter[7] .sum_lutc_input = "cin";
defparam \divisor1s|counter[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N1
maxii_lcell \divisor1s|counter[8] (
// Equation(s):
// \divisor1s|counter [8] = DFFEAS((\divisor1s|counter [8] $ ((!(!\divisor1s|counter[6]~15  & \divisor1s|counter[7]~17 ) # (\divisor1s|counter[6]~15  & \divisor1s|counter[7]~17COUT1_56 )))), GLOBAL(\clk~combout ), VCC, , , , , \divisor1s|LessThan0~6_combout 
// , )
// \divisor1s|counter[8]~19  = CARRY(((\divisor1s|counter [8] & !\divisor1s|counter[7]~17 )))
// \divisor1s|counter[8]~19COUT1_57  = CARRY(((\divisor1s|counter [8] & !\divisor1s|counter[7]~17COUT1_56 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\divisor1s|counter [8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[6]~15 ),
	.cin0(\divisor1s|counter[7]~17 ),
	.cin1(\divisor1s|counter[7]~17COUT1_56 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [8]),
	.cout(),
	.cout0(\divisor1s|counter[8]~19 ),
	.cout1(\divisor1s|counter[8]~19COUT1_57 ));
// synopsys translate_off
defparam \divisor1s|counter[8] .cin0_used = "true";
defparam \divisor1s|counter[8] .cin1_used = "true";
defparam \divisor1s|counter[8] .cin_used = "true";
defparam \divisor1s|counter[8] .lut_mask = "c30c";
defparam \divisor1s|counter[8] .operation_mode = "arithmetic";
defparam \divisor1s|counter[8] .output_mode = "reg_only";
defparam \divisor1s|counter[8] .register_cascade_mode = "off";
defparam \divisor1s|counter[8] .sum_lutc_input = "cin";
defparam \divisor1s|counter[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N2
maxii_lcell \divisor1s|counter[9] (
// Equation(s):
// \divisor1s|counter [9] = DFFEAS((\divisor1s|counter [9] $ (((!\divisor1s|counter[6]~15  & \divisor1s|counter[8]~19 ) # (\divisor1s|counter[6]~15  & \divisor1s|counter[8]~19COUT1_57 )))), GLOBAL(\clk~combout ), VCC, , , , , \divisor1s|LessThan0~6_combout , 
// )
// \divisor1s|counter[9]~21  = CARRY(((!\divisor1s|counter[8]~19 ) # (!\divisor1s|counter [9])))
// \divisor1s|counter[9]~21COUT1_58  = CARRY(((!\divisor1s|counter[8]~19COUT1_57 ) # (!\divisor1s|counter [9])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\divisor1s|counter [9]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[6]~15 ),
	.cin0(\divisor1s|counter[8]~19 ),
	.cin1(\divisor1s|counter[8]~19COUT1_57 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [9]),
	.cout(),
	.cout0(\divisor1s|counter[9]~21 ),
	.cout1(\divisor1s|counter[9]~21COUT1_58 ));
// synopsys translate_off
defparam \divisor1s|counter[9] .cin0_used = "true";
defparam \divisor1s|counter[9] .cin1_used = "true";
defparam \divisor1s|counter[9] .cin_used = "true";
defparam \divisor1s|counter[9] .lut_mask = "3c3f";
defparam \divisor1s|counter[9] .operation_mode = "arithmetic";
defparam \divisor1s|counter[9] .output_mode = "reg_only";
defparam \divisor1s|counter[9] .register_cascade_mode = "off";
defparam \divisor1s|counter[9] .sum_lutc_input = "cin";
defparam \divisor1s|counter[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N3
maxii_lcell \divisor1s|counter[10] (
// Equation(s):
// \divisor1s|counter [10] = DFFEAS(\divisor1s|counter [10] $ ((((!(!\divisor1s|counter[6]~15  & \divisor1s|counter[9]~21 ) # (\divisor1s|counter[6]~15  & \divisor1s|counter[9]~21COUT1_58 ))))), GLOBAL(\clk~combout ), VCC, , , , , 
// \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[10]~23  = CARRY((\divisor1s|counter [10] & ((!\divisor1s|counter[9]~21 ))))
// \divisor1s|counter[10]~23COUT1_59  = CARRY((\divisor1s|counter [10] & ((!\divisor1s|counter[9]~21COUT1_58 ))))

	.clk(\clk~combout ),
	.dataa(\divisor1s|counter [10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[6]~15 ),
	.cin0(\divisor1s|counter[9]~21 ),
	.cin1(\divisor1s|counter[9]~21COUT1_58 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [10]),
	.cout(),
	.cout0(\divisor1s|counter[10]~23 ),
	.cout1(\divisor1s|counter[10]~23COUT1_59 ));
// synopsys translate_off
defparam \divisor1s|counter[10] .cin0_used = "true";
defparam \divisor1s|counter[10] .cin1_used = "true";
defparam \divisor1s|counter[10] .cin_used = "true";
defparam \divisor1s|counter[10] .lut_mask = "a50a";
defparam \divisor1s|counter[10] .operation_mode = "arithmetic";
defparam \divisor1s|counter[10] .output_mode = "reg_only";
defparam \divisor1s|counter[10] .register_cascade_mode = "off";
defparam \divisor1s|counter[10] .sum_lutc_input = "cin";
defparam \divisor1s|counter[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N4
maxii_lcell \divisor1s|counter[11] (
// Equation(s):
// \divisor1s|counter [11] = DFFEAS(\divisor1s|counter [11] $ (((((!\divisor1s|counter[6]~15  & \divisor1s|counter[10]~23 ) # (\divisor1s|counter[6]~15  & \divisor1s|counter[10]~23COUT1_59 ))))), GLOBAL(\clk~combout ), VCC, , , , , 
// \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[11]~7  = CARRY(((!\divisor1s|counter[10]~23COUT1_59 )) # (!\divisor1s|counter [11]))

	.clk(\clk~combout ),
	.dataa(\divisor1s|counter [11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[6]~15 ),
	.cin0(\divisor1s|counter[10]~23 ),
	.cin1(\divisor1s|counter[10]~23COUT1_59 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [11]),
	.cout(\divisor1s|counter[11]~7 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divisor1s|counter[11] .cin0_used = "true";
defparam \divisor1s|counter[11] .cin1_used = "true";
defparam \divisor1s|counter[11] .cin_used = "true";
defparam \divisor1s|counter[11] .lut_mask = "5a5f";
defparam \divisor1s|counter[11] .operation_mode = "arithmetic";
defparam \divisor1s|counter[11] .output_mode = "reg_only";
defparam \divisor1s|counter[11] .register_cascade_mode = "off";
defparam \divisor1s|counter[11] .sum_lutc_input = "cin";
defparam \divisor1s|counter[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N5
maxii_lcell \divisor1s|counter[12] (
// Equation(s):
// \divisor1s|counter [12] = DFFEAS(\divisor1s|counter [12] $ ((((!\divisor1s|counter[11]~7 )))), GLOBAL(\clk~combout ), VCC, , , , , \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[12]~9  = CARRY((\divisor1s|counter [12] & ((!\divisor1s|counter[11]~7 ))))
// \divisor1s|counter[12]~9COUT1_60  = CARRY((\divisor1s|counter [12] & ((!\divisor1s|counter[11]~7 ))))

	.clk(\clk~combout ),
	.dataa(\divisor1s|counter [12]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[11]~7 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [12]),
	.cout(),
	.cout0(\divisor1s|counter[12]~9 ),
	.cout1(\divisor1s|counter[12]~9COUT1_60 ));
// synopsys translate_off
defparam \divisor1s|counter[12] .cin_used = "true";
defparam \divisor1s|counter[12] .lut_mask = "a50a";
defparam \divisor1s|counter[12] .operation_mode = "arithmetic";
defparam \divisor1s|counter[12] .output_mode = "reg_only";
defparam \divisor1s|counter[12] .register_cascade_mode = "off";
defparam \divisor1s|counter[12] .sum_lutc_input = "cin";
defparam \divisor1s|counter[12] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N6
maxii_lcell \divisor1s|counter[13] (
// Equation(s):
// \divisor1s|counter [13] = DFFEAS(\divisor1s|counter [13] $ (((((!\divisor1s|counter[11]~7  & \divisor1s|counter[12]~9 ) # (\divisor1s|counter[11]~7  & \divisor1s|counter[12]~9COUT1_60 ))))), GLOBAL(\clk~combout ), VCC, , , , , 
// \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[13]~11  = CARRY(((!\divisor1s|counter[12]~9 )) # (!\divisor1s|counter [13]))
// \divisor1s|counter[13]~11COUT1_61  = CARRY(((!\divisor1s|counter[12]~9COUT1_60 )) # (!\divisor1s|counter [13]))

	.clk(\clk~combout ),
	.dataa(\divisor1s|counter [13]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[11]~7 ),
	.cin0(\divisor1s|counter[12]~9 ),
	.cin1(\divisor1s|counter[12]~9COUT1_60 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [13]),
	.cout(),
	.cout0(\divisor1s|counter[13]~11 ),
	.cout1(\divisor1s|counter[13]~11COUT1_61 ));
// synopsys translate_off
defparam \divisor1s|counter[13] .cin0_used = "true";
defparam \divisor1s|counter[13] .cin1_used = "true";
defparam \divisor1s|counter[13] .cin_used = "true";
defparam \divisor1s|counter[13] .lut_mask = "5a5f";
defparam \divisor1s|counter[13] .operation_mode = "arithmetic";
defparam \divisor1s|counter[13] .output_mode = "reg_only";
defparam \divisor1s|counter[13] .register_cascade_mode = "off";
defparam \divisor1s|counter[13] .sum_lutc_input = "cin";
defparam \divisor1s|counter[13] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N7
maxii_lcell \divisor1s|counter[14] (
// Equation(s):
// \divisor1s|counter [14] = DFFEAS((\divisor1s|counter [14] $ ((!(!\divisor1s|counter[11]~7  & \divisor1s|counter[13]~11 ) # (\divisor1s|counter[11]~7  & \divisor1s|counter[13]~11COUT1_61 )))), GLOBAL(\clk~combout ), VCC, , , , , 
// \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[14]~13  = CARRY(((\divisor1s|counter [14] & !\divisor1s|counter[13]~11 )))
// \divisor1s|counter[14]~13COUT1_62  = CARRY(((\divisor1s|counter [14] & !\divisor1s|counter[13]~11COUT1_61 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\divisor1s|counter [14]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[11]~7 ),
	.cin0(\divisor1s|counter[13]~11 ),
	.cin1(\divisor1s|counter[13]~11COUT1_61 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [14]),
	.cout(),
	.cout0(\divisor1s|counter[14]~13 ),
	.cout1(\divisor1s|counter[14]~13COUT1_62 ));
// synopsys translate_off
defparam \divisor1s|counter[14] .cin0_used = "true";
defparam \divisor1s|counter[14] .cin1_used = "true";
defparam \divisor1s|counter[14] .cin_used = "true";
defparam \divisor1s|counter[14] .lut_mask = "c30c";
defparam \divisor1s|counter[14] .operation_mode = "arithmetic";
defparam \divisor1s|counter[14] .output_mode = "reg_only";
defparam \divisor1s|counter[14] .register_cascade_mode = "off";
defparam \divisor1s|counter[14] .sum_lutc_input = "cin";
defparam \divisor1s|counter[14] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N8
maxii_lcell \divisor1s|counter[15] (
// Equation(s):
// \divisor1s|counter [15] = DFFEAS(\divisor1s|counter [15] $ (((((!\divisor1s|counter[11]~7  & \divisor1s|counter[14]~13 ) # (\divisor1s|counter[11]~7  & \divisor1s|counter[14]~13COUT1_62 ))))), GLOBAL(\clk~combout ), VCC, , , , , 
// \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[15]~1  = CARRY(((!\divisor1s|counter[14]~13 )) # (!\divisor1s|counter [15]))
// \divisor1s|counter[15]~1COUT1_63  = CARRY(((!\divisor1s|counter[14]~13COUT1_62 )) # (!\divisor1s|counter [15]))

	.clk(\clk~combout ),
	.dataa(\divisor1s|counter [15]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[11]~7 ),
	.cin0(\divisor1s|counter[14]~13 ),
	.cin1(\divisor1s|counter[14]~13COUT1_62 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [15]),
	.cout(),
	.cout0(\divisor1s|counter[15]~1 ),
	.cout1(\divisor1s|counter[15]~1COUT1_63 ));
// synopsys translate_off
defparam \divisor1s|counter[15] .cin0_used = "true";
defparam \divisor1s|counter[15] .cin1_used = "true";
defparam \divisor1s|counter[15] .cin_used = "true";
defparam \divisor1s|counter[15] .lut_mask = "5a5f";
defparam \divisor1s|counter[15] .operation_mode = "arithmetic";
defparam \divisor1s|counter[15] .output_mode = "reg_only";
defparam \divisor1s|counter[15] .register_cascade_mode = "off";
defparam \divisor1s|counter[15] .sum_lutc_input = "cin";
defparam \divisor1s|counter[15] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y1_N9
maxii_lcell \divisor1s|counter[16] (
// Equation(s):
// \divisor1s|counter [16] = DFFEAS((\divisor1s|counter [16] $ ((!(!\divisor1s|counter[11]~7  & \divisor1s|counter[15]~1 ) # (\divisor1s|counter[11]~7  & \divisor1s|counter[15]~1COUT1_63 )))), GLOBAL(\clk~combout ), VCC, , , , , 
// \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[16]~25  = CARRY(((\divisor1s|counter [16] & !\divisor1s|counter[15]~1COUT1_63 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\divisor1s|counter [16]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[11]~7 ),
	.cin0(\divisor1s|counter[15]~1 ),
	.cin1(\divisor1s|counter[15]~1COUT1_63 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [16]),
	.cout(\divisor1s|counter[16]~25 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divisor1s|counter[16] .cin0_used = "true";
defparam \divisor1s|counter[16] .cin1_used = "true";
defparam \divisor1s|counter[16] .cin_used = "true";
defparam \divisor1s|counter[16] .lut_mask = "c30c";
defparam \divisor1s|counter[16] .operation_mode = "arithmetic";
defparam \divisor1s|counter[16] .output_mode = "reg_only";
defparam \divisor1s|counter[16] .register_cascade_mode = "off";
defparam \divisor1s|counter[16] .sum_lutc_input = "cin";
defparam \divisor1s|counter[16] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N0
maxii_lcell \divisor1s|counter[17] (
// Equation(s):
// \divisor1s|counter [17] = DFFEAS((\divisor1s|counter [17] $ ((\divisor1s|counter[16]~25 ))), GLOBAL(\clk~combout ), VCC, , , , , \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[17]~3  = CARRY(((!\divisor1s|counter[16]~25 ) # (!\divisor1s|counter [17])))
// \divisor1s|counter[17]~3COUT1_64  = CARRY(((!\divisor1s|counter[16]~25 ) # (!\divisor1s|counter [17])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\divisor1s|counter [17]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[16]~25 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [17]),
	.cout(),
	.cout0(\divisor1s|counter[17]~3 ),
	.cout1(\divisor1s|counter[17]~3COUT1_64 ));
// synopsys translate_off
defparam \divisor1s|counter[17] .cin_used = "true";
defparam \divisor1s|counter[17] .lut_mask = "3c3f";
defparam \divisor1s|counter[17] .operation_mode = "arithmetic";
defparam \divisor1s|counter[17] .output_mode = "reg_only";
defparam \divisor1s|counter[17] .register_cascade_mode = "off";
defparam \divisor1s|counter[17] .sum_lutc_input = "cin";
defparam \divisor1s|counter[17] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N1
maxii_lcell \divisor1s|counter[18] (
// Equation(s):
// \divisor1s|counter [18] = DFFEAS((\divisor1s|counter [18] $ ((!(!\divisor1s|counter[16]~25  & \divisor1s|counter[17]~3 ) # (\divisor1s|counter[16]~25  & \divisor1s|counter[17]~3COUT1_64 )))), GLOBAL(\clk~combout ), VCC, , , , , 
// \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[18]~27  = CARRY(((\divisor1s|counter [18] & !\divisor1s|counter[17]~3 )))
// \divisor1s|counter[18]~27COUT1_65  = CARRY(((\divisor1s|counter [18] & !\divisor1s|counter[17]~3COUT1_64 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\divisor1s|counter [18]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[16]~25 ),
	.cin0(\divisor1s|counter[17]~3 ),
	.cin1(\divisor1s|counter[17]~3COUT1_64 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [18]),
	.cout(),
	.cout0(\divisor1s|counter[18]~27 ),
	.cout1(\divisor1s|counter[18]~27COUT1_65 ));
// synopsys translate_off
defparam \divisor1s|counter[18] .cin0_used = "true";
defparam \divisor1s|counter[18] .cin1_used = "true";
defparam \divisor1s|counter[18] .cin_used = "true";
defparam \divisor1s|counter[18] .lut_mask = "c30c";
defparam \divisor1s|counter[18] .operation_mode = "arithmetic";
defparam \divisor1s|counter[18] .output_mode = "reg_only";
defparam \divisor1s|counter[18] .register_cascade_mode = "off";
defparam \divisor1s|counter[18] .sum_lutc_input = "cin";
defparam \divisor1s|counter[18] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N2
maxii_lcell \divisor1s|counter[19] (
// Equation(s):
// \divisor1s|counter [19] = DFFEAS((\divisor1s|counter [19] $ (((!\divisor1s|counter[16]~25  & \divisor1s|counter[18]~27 ) # (\divisor1s|counter[16]~25  & \divisor1s|counter[18]~27COUT1_65 )))), GLOBAL(\clk~combout ), VCC, , , , , 
// \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[19]~29  = CARRY(((!\divisor1s|counter[18]~27 ) # (!\divisor1s|counter [19])))
// \divisor1s|counter[19]~29COUT1_66  = CARRY(((!\divisor1s|counter[18]~27COUT1_65 ) # (!\divisor1s|counter [19])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\divisor1s|counter [19]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[16]~25 ),
	.cin0(\divisor1s|counter[18]~27 ),
	.cin1(\divisor1s|counter[18]~27COUT1_65 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [19]),
	.cout(),
	.cout0(\divisor1s|counter[19]~29 ),
	.cout1(\divisor1s|counter[19]~29COUT1_66 ));
// synopsys translate_off
defparam \divisor1s|counter[19] .cin0_used = "true";
defparam \divisor1s|counter[19] .cin1_used = "true";
defparam \divisor1s|counter[19] .cin_used = "true";
defparam \divisor1s|counter[19] .lut_mask = "3c3f";
defparam \divisor1s|counter[19] .operation_mode = "arithmetic";
defparam \divisor1s|counter[19] .output_mode = "reg_only";
defparam \divisor1s|counter[19] .register_cascade_mode = "off";
defparam \divisor1s|counter[19] .sum_lutc_input = "cin";
defparam \divisor1s|counter[19] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N3
maxii_lcell \divisor1s|counter[20] (
// Equation(s):
// \divisor1s|counter [20] = DFFEAS(\divisor1s|counter [20] $ ((((!(!\divisor1s|counter[16]~25  & \divisor1s|counter[19]~29 ) # (\divisor1s|counter[16]~25  & \divisor1s|counter[19]~29COUT1_66 ))))), GLOBAL(\clk~combout ), VCC, , , , , 
// \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[20]~31  = CARRY((\divisor1s|counter [20] & ((!\divisor1s|counter[19]~29 ))))
// \divisor1s|counter[20]~31COUT1_67  = CARRY((\divisor1s|counter [20] & ((!\divisor1s|counter[19]~29COUT1_66 ))))

	.clk(\clk~combout ),
	.dataa(\divisor1s|counter [20]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[16]~25 ),
	.cin0(\divisor1s|counter[19]~29 ),
	.cin1(\divisor1s|counter[19]~29COUT1_66 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [20]),
	.cout(),
	.cout0(\divisor1s|counter[20]~31 ),
	.cout1(\divisor1s|counter[20]~31COUT1_67 ));
// synopsys translate_off
defparam \divisor1s|counter[20] .cin0_used = "true";
defparam \divisor1s|counter[20] .cin1_used = "true";
defparam \divisor1s|counter[20] .cin_used = "true";
defparam \divisor1s|counter[20] .lut_mask = "a50a";
defparam \divisor1s|counter[20] .operation_mode = "arithmetic";
defparam \divisor1s|counter[20] .output_mode = "reg_only";
defparam \divisor1s|counter[20] .register_cascade_mode = "off";
defparam \divisor1s|counter[20] .sum_lutc_input = "cin";
defparam \divisor1s|counter[20] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N4
maxii_lcell \divisor1s|counter[21] (
// Equation(s):
// \divisor1s|counter [21] = DFFEAS(\divisor1s|counter [21] $ (((((!\divisor1s|counter[16]~25  & \divisor1s|counter[20]~31 ) # (\divisor1s|counter[16]~25  & \divisor1s|counter[20]~31COUT1_67 ))))), GLOBAL(\clk~combout ), VCC, , , , , 
// \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[21]~33  = CARRY(((!\divisor1s|counter[20]~31COUT1_67 )) # (!\divisor1s|counter [21]))

	.clk(\clk~combout ),
	.dataa(\divisor1s|counter [21]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[16]~25 ),
	.cin0(\divisor1s|counter[20]~31 ),
	.cin1(\divisor1s|counter[20]~31COUT1_67 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [21]),
	.cout(\divisor1s|counter[21]~33 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divisor1s|counter[21] .cin0_used = "true";
defparam \divisor1s|counter[21] .cin1_used = "true";
defparam \divisor1s|counter[21] .cin_used = "true";
defparam \divisor1s|counter[21] .lut_mask = "5a5f";
defparam \divisor1s|counter[21] .operation_mode = "arithmetic";
defparam \divisor1s|counter[21] .output_mode = "reg_only";
defparam \divisor1s|counter[21] .register_cascade_mode = "off";
defparam \divisor1s|counter[21] .sum_lutc_input = "cin";
defparam \divisor1s|counter[21] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N5
maxii_lcell \divisor1s|counter[22] (
// Equation(s):
// \divisor1s|counter [22] = DFFEAS(\divisor1s|counter [22] $ ((((!\divisor1s|counter[21]~33 )))), GLOBAL(\clk~combout ), VCC, , , , , \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[22]~35  = CARRY((\divisor1s|counter [22] & ((!\divisor1s|counter[21]~33 ))))
// \divisor1s|counter[22]~35COUT1_68  = CARRY((\divisor1s|counter [22] & ((!\divisor1s|counter[21]~33 ))))

	.clk(\clk~combout ),
	.dataa(\divisor1s|counter [22]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[21]~33 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [22]),
	.cout(),
	.cout0(\divisor1s|counter[22]~35 ),
	.cout1(\divisor1s|counter[22]~35COUT1_68 ));
// synopsys translate_off
defparam \divisor1s|counter[22] .cin_used = "true";
defparam \divisor1s|counter[22] .lut_mask = "a50a";
defparam \divisor1s|counter[22] .operation_mode = "arithmetic";
defparam \divisor1s|counter[22] .output_mode = "reg_only";
defparam \divisor1s|counter[22] .register_cascade_mode = "off";
defparam \divisor1s|counter[22] .sum_lutc_input = "cin";
defparam \divisor1s|counter[22] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N6
maxii_lcell \divisor1s|counter[23] (
// Equation(s):
// \divisor1s|counter [23] = DFFEAS(\divisor1s|counter [23] $ (((((!\divisor1s|counter[21]~33  & \divisor1s|counter[22]~35 ) # (\divisor1s|counter[21]~33  & \divisor1s|counter[22]~35COUT1_68 ))))), GLOBAL(\clk~combout ), VCC, , , , , 
// \divisor1s|LessThan0~6_combout , )
// \divisor1s|counter[23]~5  = CARRY(((!\divisor1s|counter[22]~35 )) # (!\divisor1s|counter [23]))
// \divisor1s|counter[23]~5COUT1_69  = CARRY(((!\divisor1s|counter[22]~35COUT1_68 )) # (!\divisor1s|counter [23]))

	.clk(\clk~combout ),
	.dataa(\divisor1s|counter [23]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[21]~33 ),
	.cin0(\divisor1s|counter[22]~35 ),
	.cin1(\divisor1s|counter[22]~35COUT1_68 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [23]),
	.cout(),
	.cout0(\divisor1s|counter[23]~5 ),
	.cout1(\divisor1s|counter[23]~5COUT1_69 ));
// synopsys translate_off
defparam \divisor1s|counter[23] .cin0_used = "true";
defparam \divisor1s|counter[23] .cin1_used = "true";
defparam \divisor1s|counter[23] .cin_used = "true";
defparam \divisor1s|counter[23] .lut_mask = "5a5f";
defparam \divisor1s|counter[23] .operation_mode = "arithmetic";
defparam \divisor1s|counter[23] .output_mode = "reg_only";
defparam \divisor1s|counter[23] .register_cascade_mode = "off";
defparam \divisor1s|counter[23] .sum_lutc_input = "cin";
defparam \divisor1s|counter[23] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N7
maxii_lcell \divisor1s|counter[24] (
// Equation(s):
// \divisor1s|counter [24] = DFFEAS((\divisor1s|counter [24] $ ((!(!\divisor1s|counter[21]~33  & \divisor1s|counter[23]~5 ) # (\divisor1s|counter[21]~33  & \divisor1s|counter[23]~5COUT1_69 )))), GLOBAL(\clk~combout ), VCC, , , , , 
// \divisor1s|LessThan0~6_combout , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\divisor1s|counter [24]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\divisor1s|LessThan0~6_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\divisor1s|counter[21]~33 ),
	.cin0(\divisor1s|counter[23]~5 ),
	.cin1(\divisor1s|counter[23]~5COUT1_69 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|counter [24]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divisor1s|counter[24] .cin0_used = "true";
defparam \divisor1s|counter[24] .cin1_used = "true";
defparam \divisor1s|counter[24] .cin_used = "true";
defparam \divisor1s|counter[24] .lut_mask = "c3c3";
defparam \divisor1s|counter[24] .operation_mode = "normal";
defparam \divisor1s|counter[24] .output_mode = "reg_only";
defparam \divisor1s|counter[24] .register_cascade_mode = "off";
defparam \divisor1s|counter[24] .sum_lutc_input = "cin";
defparam \divisor1s|counter[24] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X5_Y1_N8
maxii_lcell \divisor1s|LessThan0~4 (
// Equation(s):
// \divisor1s|LessThan0~4_combout  = (((!\divisor1s|counter [16] & !\divisor1s|counter [17])) # (!\divisor1s|counter [18])) # (!\divisor1s|counter [19])

	.clk(gnd),
	.dataa(\divisor1s|counter [16]),
	.datab(\divisor1s|counter [19]),
	.datac(\divisor1s|counter [17]),
	.datad(\divisor1s|counter [18]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divisor1s|LessThan0~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divisor1s|LessThan0~4 .lut_mask = "37ff";
defparam \divisor1s|LessThan0~4 .operation_mode = "normal";
defparam \divisor1s|LessThan0~4 .output_mode = "comb_only";
defparam \divisor1s|LessThan0~4 .register_cascade_mode = "off";
defparam \divisor1s|LessThan0~4 .sum_lutc_input = "datac";
defparam \divisor1s|LessThan0~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y1_N5
maxii_lcell \divisor1s|LessThan0~5 (
// Equation(s):
// \divisor1s|LessThan0~5_combout  = (((\divisor1s|LessThan0~4_combout ) # (!\divisor1s|counter [21])) # (!\divisor1s|counter [22])) # (!\divisor1s|counter [20])

	.clk(gnd),
	.dataa(\divisor1s|counter [20]),
	.datab(\divisor1s|counter [22]),
	.datac(\divisor1s|LessThan0~4_combout ),
	.datad(\divisor1s|counter [21]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divisor1s|LessThan0~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divisor1s|LessThan0~5 .lut_mask = "f7ff";
defparam \divisor1s|LessThan0~5 .operation_mode = "normal";
defparam \divisor1s|LessThan0~5 .output_mode = "comb_only";
defparam \divisor1s|LessThan0~5 .register_cascade_mode = "off";
defparam \divisor1s|LessThan0~5 .sum_lutc_input = "datac";
defparam \divisor1s|LessThan0~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y1_N1
maxii_lcell \divisor1s|LessThan0~0 (
// Equation(s):
// \divisor1s|LessThan0~0_combout  = (!\divisor1s|counter [17] & (((!\divisor1s|counter [23] & !\divisor1s|counter [15]))))

	.clk(gnd),
	.dataa(\divisor1s|counter [17]),
	.datab(vcc),
	.datac(\divisor1s|counter [23]),
	.datad(\divisor1s|counter [15]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divisor1s|LessThan0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divisor1s|LessThan0~0 .lut_mask = "0005";
defparam \divisor1s|LessThan0~0 .operation_mode = "normal";
defparam \divisor1s|LessThan0~0 .output_mode = "comb_only";
defparam \divisor1s|LessThan0~0 .register_cascade_mode = "off";
defparam \divisor1s|LessThan0~0 .sum_lutc_input = "datac";
defparam \divisor1s|LessThan0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y1_N9
maxii_lcell \divisor1s|LessThan0~1 (
// Equation(s):
// \divisor1s|LessThan0~1_combout  = (((!\divisor1s|counter [14]) # (!\divisor1s|counter [13])) # (!\divisor1s|counter [11])) # (!\divisor1s|counter [12])

	.clk(gnd),
	.dataa(\divisor1s|counter [12]),
	.datab(\divisor1s|counter [11]),
	.datac(\divisor1s|counter [13]),
	.datad(\divisor1s|counter [14]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divisor1s|LessThan0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divisor1s|LessThan0~1 .lut_mask = "7fff";
defparam \divisor1s|LessThan0~1 .operation_mode = "normal";
defparam \divisor1s|LessThan0~1 .output_mode = "comb_only";
defparam \divisor1s|LessThan0~1 .register_cascade_mode = "off";
defparam \divisor1s|LessThan0~1 .sum_lutc_input = "datac";
defparam \divisor1s|LessThan0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y1_N7
maxii_lcell \divisor1s|LessThan0~2 (
// Equation(s):
// \divisor1s|LessThan0~2_combout  = (!\divisor1s|counter [6] & (!\divisor1s|counter [8] & (!\divisor1s|counter [9] & !\divisor1s|counter [7])))

	.clk(gnd),
	.dataa(\divisor1s|counter [6]),
	.datab(\divisor1s|counter [8]),
	.datac(\divisor1s|counter [9]),
	.datad(\divisor1s|counter [7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divisor1s|LessThan0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divisor1s|LessThan0~2 .lut_mask = "0001";
defparam \divisor1s|LessThan0~2 .operation_mode = "normal";
defparam \divisor1s|LessThan0~2 .output_mode = "comb_only";
defparam \divisor1s|LessThan0~2 .register_cascade_mode = "off";
defparam \divisor1s|LessThan0~2 .sum_lutc_input = "datac";
defparam \divisor1s|LessThan0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y1_N8
maxii_lcell \divisor1s|LessThan0~3 (
// Equation(s):
// \divisor1s|LessThan0~3_combout  = (\divisor1s|LessThan0~0_combout  & ((\divisor1s|LessThan0~1_combout ) # ((!\divisor1s|counter [10] & \divisor1s|LessThan0~2_combout ))))

	.clk(gnd),
	.dataa(\divisor1s|counter [10]),
	.datab(\divisor1s|LessThan0~0_combout ),
	.datac(\divisor1s|LessThan0~1_combout ),
	.datad(\divisor1s|LessThan0~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divisor1s|LessThan0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divisor1s|LessThan0~3 .lut_mask = "c4c0";
defparam \divisor1s|LessThan0~3 .operation_mode = "normal";
defparam \divisor1s|LessThan0~3 .output_mode = "comb_only";
defparam \divisor1s|LessThan0~3 .register_cascade_mode = "off";
defparam \divisor1s|LessThan0~3 .sum_lutc_input = "datac";
defparam \divisor1s|LessThan0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y1_N9
maxii_lcell \divisor1s|LessThan0~6 (
// Equation(s):
// \divisor1s|LessThan0~6_combout  = (\divisor1s|counter [24] & (!\divisor1s|LessThan0~3_combout  & ((\divisor1s|counter [23]) # (!\divisor1s|LessThan0~5_combout ))))

	.clk(gnd),
	.dataa(\divisor1s|counter [23]),
	.datab(\divisor1s|counter [24]),
	.datac(\divisor1s|LessThan0~5_combout ),
	.datad(\divisor1s|LessThan0~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\divisor1s|LessThan0~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divisor1s|LessThan0~6 .lut_mask = "008c";
defparam \divisor1s|LessThan0~6 .operation_mode = "normal";
defparam \divisor1s|LessThan0~6 .output_mode = "comb_only";
defparam \divisor1s|LessThan0~6 .register_cascade_mode = "off";
defparam \divisor1s|LessThan0~6 .sum_lutc_input = "datac";
defparam \divisor1s|LessThan0~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y1_N4
maxii_lcell \divisor1s|clock_out (
// Equation(s):
// \divisor1s|clock_out~regout  = DFFEAS(((\divisor1s|clock_out~regout  $ (\divisor1s|LessThan0~6_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\divisor1s|clock_out~regout ),
	.datad(\divisor1s|LessThan0~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\divisor1s|clock_out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \divisor1s|clock_out .lut_mask = "0ff0";
defparam \divisor1s|clock_out .operation_mode = "normal";
defparam \divisor1s|clock_out .output_mode = "reg_only";
defparam \divisor1s|clock_out .register_cascade_mode = "off";
defparam \divisor1s|clock_out .sum_lutc_input = "datac";
defparam \divisor1s|clock_out .synch_mode = "off";
// synopsys translate_on

// Location: PIN_52,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \B1~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\B1~combout ),
	.padio(B1));
// synopsys translate_off
defparam \B1~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_50,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \B2~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\B2~combout ),
	.padio(B2));
// synopsys translate_off
defparam \B2~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X6_Y3_N2
maxii_lcell \pessoas|nextstate~0 (
// Equation(s):
// \pessoas|nextstate~0_combout  = ((\porta|state.S3~regout  & ((!\B2~combout ) # (!\B1~combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\B1~combout ),
	.datac(\B2~combout ),
	.datad(\porta|state.S3~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\pessoas|nextstate~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|nextstate~0 .lut_mask = "3f00";
defparam \pessoas|nextstate~0 .operation_mode = "normal";
defparam \pessoas|nextstate~0 .output_mode = "comb_only";
defparam \pessoas|nextstate~0 .register_cascade_mode = "off";
defparam \pessoas|nextstate~0 .sum_lutc_input = "datac";
defparam \pessoas|nextstate~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N8
maxii_lcell \pessoas|always1~0 (
// Equation(s):
// \pessoas|always1~0_combout  = ((!\B1~combout  & ((\porta|state.S3~regout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\B1~combout ),
	.datac(vcc),
	.datad(\porta|state.S3~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\pessoas|always1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|always1~0 .lut_mask = "3300";
defparam \pessoas|always1~0 .operation_mode = "normal";
defparam \pessoas|always1~0 .output_mode = "comb_only";
defparam \pessoas|always1~0 .register_cascade_mode = "off";
defparam \pessoas|always1~0 .sum_lutc_input = "datac";
defparam \pessoas|always1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N6
maxii_lcell \pessoas|Selector2~0 (
// Equation(s):
// \pessoas|Selector2~0_combout  = (\pessoas|state.S1~regout  & ((\pessoas|always1~0_combout ) # ((\pessoas|state.S2~regout  & !\pessoas|nextstate~0_combout )))) # (!\pessoas|state.S1~regout  & (\pessoas|state.S2~regout  & (!\pessoas|nextstate~0_combout )))

	.clk(gnd),
	.dataa(\pessoas|state.S1~regout ),
	.datab(\pessoas|state.S2~regout ),
	.datac(\pessoas|nextstate~0_combout ),
	.datad(\pessoas|always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\pessoas|Selector2~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|Selector2~0 .lut_mask = "ae0c";
defparam \pessoas|Selector2~0 .operation_mode = "normal";
defparam \pessoas|Selector2~0 .output_mode = "comb_only";
defparam \pessoas|Selector2~0 .register_cascade_mode = "off";
defparam \pessoas|Selector2~0 .sum_lutc_input = "datac";
defparam \pessoas|Selector2~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_44,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \reset0~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\reset0~combout ),
	.padio(reset0));
// synopsys translate_off
defparam \reset0~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X5_Y3_N7
maxii_lcell \pessoas|state.S2 (
// Equation(s):
// \pessoas|state.S2~regout  = DFFEAS(((\pessoas|Selector2~0_combout ) # ((!\pessoas|nextstate~1_combout  & \pessoas|state.S3~regout ))), GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(vcc),
	.datab(\pessoas|nextstate~1_combout ),
	.datac(\pessoas|state.S3~regout ),
	.datad(\pessoas|Selector2~0_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\pessoas|state.S2~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|state.S2 .lut_mask = "ff30";
defparam \pessoas|state.S2 .operation_mode = "normal";
defparam \pessoas|state.S2 .output_mode = "reg_only";
defparam \pessoas|state.S2 .register_cascade_mode = "off";
defparam \pessoas|state.S2 .sum_lutc_input = "datac";
defparam \pessoas|state.S2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N8
maxii_lcell \pessoas|Selector3~0 (
// Equation(s):
// \pessoas|Selector3~0_combout  = (\pessoas|state.S2~regout  & ((\pessoas|always1~0_combout ) # ((\pessoas|state.S3~regout  & !\pessoas|nextstate~0_combout )))) # (!\pessoas|state.S2~regout  & (\pessoas|state.S3~regout  & (!\pessoas|nextstate~0_combout )))

	.clk(gnd),
	.dataa(\pessoas|state.S2~regout ),
	.datab(\pessoas|state.S3~regout ),
	.datac(\pessoas|nextstate~0_combout ),
	.datad(\pessoas|always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\pessoas|Selector3~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|Selector3~0 .lut_mask = "ae0c";
defparam \pessoas|Selector3~0 .operation_mode = "normal";
defparam \pessoas|Selector3~0 .output_mode = "comb_only";
defparam \pessoas|Selector3~0 .register_cascade_mode = "off";
defparam \pessoas|Selector3~0 .sum_lutc_input = "datac";
defparam \pessoas|Selector3~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N9
maxii_lcell \pessoas|state.S3 (
// Equation(s):
// \pessoas|state.S3~regout  = DFFEAS(((\pessoas|Selector3~0_combout ) # ((!\pessoas|nextstate~1_combout  & \pessoas|state.S4~regout ))), GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(vcc),
	.datab(\pessoas|nextstate~1_combout ),
	.datac(\pessoas|state.S4~regout ),
	.datad(\pessoas|Selector3~0_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\pessoas|state.S3~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|state.S3 .lut_mask = "ff30";
defparam \pessoas|state.S3 .operation_mode = "normal";
defparam \pessoas|state.S3 .output_mode = "reg_only";
defparam \pessoas|state.S3 .register_cascade_mode = "off";
defparam \pessoas|state.S3 .sum_lutc_input = "datac";
defparam \pessoas|state.S3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N1
maxii_lcell \pessoas|Selector4~0 (
// Equation(s):
// \pessoas|Selector4~0_combout  = (\pessoas|state.S3~regout  & ((\pessoas|always1~0_combout ) # ((!\pessoas|nextstate~0_combout  & \pessoas|state.S4~regout )))) # (!\pessoas|state.S3~regout  & (!\pessoas|nextstate~0_combout  & (\pessoas|state.S4~regout )))

	.clk(gnd),
	.dataa(\pessoas|state.S3~regout ),
	.datab(\pessoas|nextstate~0_combout ),
	.datac(\pessoas|state.S4~regout ),
	.datad(\pessoas|always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\pessoas|Selector4~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|Selector4~0 .lut_mask = "ba30";
defparam \pessoas|Selector4~0 .operation_mode = "normal";
defparam \pessoas|Selector4~0 .output_mode = "comb_only";
defparam \pessoas|Selector4~0 .register_cascade_mode = "off";
defparam \pessoas|Selector4~0 .sum_lutc_input = "datac";
defparam \pessoas|Selector4~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N0
maxii_lcell \pessoas|state.S4 (
// Equation(s):
// \pessoas|state.S4~regout  = DFFEAS(((\pessoas|Selector4~0_combout ) # ((\pessoas|state.S5~regout  & !\pessoas|nextstate~1_combout ))), GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(\pessoas|state.S5~regout ),
	.datab(vcc),
	.datac(\pessoas|nextstate~1_combout ),
	.datad(\pessoas|Selector4~0_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\pessoas|state.S4~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|state.S4 .lut_mask = "ff0a";
defparam \pessoas|state.S4 .operation_mode = "normal";
defparam \pessoas|state.S4 .output_mode = "reg_only";
defparam \pessoas|state.S4 .register_cascade_mode = "off";
defparam \pessoas|state.S4 .sum_lutc_input = "datac";
defparam \pessoas|state.S4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N3
maxii_lcell \pessoas|Selector5~0 (
// Equation(s):
// \pessoas|Selector5~0_combout  = (\pessoas|state.S5~regout  & (((\pessoas|state.S4~regout  & \pessoas|always1~0_combout )) # (!\pessoas|nextstate~0_combout ))) # (!\pessoas|state.S5~regout  & (((\pessoas|state.S4~regout  & \pessoas|always1~0_combout ))))

	.clk(gnd),
	.dataa(\pessoas|state.S5~regout ),
	.datab(\pessoas|nextstate~0_combout ),
	.datac(\pessoas|state.S4~regout ),
	.datad(\pessoas|always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\pessoas|Selector5~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|Selector5~0 .lut_mask = "f222";
defparam \pessoas|Selector5~0 .operation_mode = "normal";
defparam \pessoas|Selector5~0 .output_mode = "comb_only";
defparam \pessoas|Selector5~0 .register_cascade_mode = "off";
defparam \pessoas|Selector5~0 .sum_lutc_input = "datac";
defparam \pessoas|Selector5~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N4
maxii_lcell \pessoas|state.S5 (
// Equation(s):
// \pessoas|state.S5~regout  = DFFEAS(((\pessoas|Selector5~0_combout ) # ((\pessoas|state.S6~regout  & !\pessoas|nextstate~1_combout ))), GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(vcc),
	.datab(\pessoas|state.S6~regout ),
	.datac(\pessoas|nextstate~1_combout ),
	.datad(\pessoas|Selector5~0_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\pessoas|state.S5~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|state.S5 .lut_mask = "ff0c";
defparam \pessoas|state.S5 .operation_mode = "normal";
defparam \pessoas|state.S5 .output_mode = "reg_only";
defparam \pessoas|state.S5 .register_cascade_mode = "off";
defparam \pessoas|state.S5 .sum_lutc_input = "datac";
defparam \pessoas|state.S5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N6
maxii_lcell \pessoas|Selector6~0 (
// Equation(s):
// \pessoas|Selector6~0_combout  = (\pessoas|state.S5~regout  & ((\pessoas|always1~0_combout ) # ((!\pessoas|nextstate~0_combout  & \pessoas|state.S6~regout )))) # (!\pessoas|state.S5~regout  & (!\pessoas|nextstate~0_combout  & (\pessoas|state.S6~regout )))

	.clk(gnd),
	.dataa(\pessoas|state.S5~regout ),
	.datab(\pessoas|nextstate~0_combout ),
	.datac(\pessoas|state.S6~regout ),
	.datad(\pessoas|always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\pessoas|Selector6~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|Selector6~0 .lut_mask = "ba30";
defparam \pessoas|Selector6~0 .operation_mode = "normal";
defparam \pessoas|Selector6~0 .output_mode = "comb_only";
defparam \pessoas|Selector6~0 .register_cascade_mode = "off";
defparam \pessoas|Selector6~0 .sum_lutc_input = "datac";
defparam \pessoas|Selector6~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N7
maxii_lcell \pessoas|state.S6 (
// Equation(s):
// \pessoas|state.S6~regout  = DFFEAS(((\pessoas|Selector6~0_combout ) # ((\pessoas|state.S7~regout  & !\pessoas|nextstate~1_combout ))), GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(vcc),
	.datab(\pessoas|state.S7~regout ),
	.datac(\pessoas|nextstate~1_combout ),
	.datad(\pessoas|Selector6~0_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\pessoas|state.S6~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|state.S6 .lut_mask = "ff0c";
defparam \pessoas|state.S6 .operation_mode = "normal";
defparam \pessoas|state.S6 .output_mode = "reg_only";
defparam \pessoas|state.S6 .register_cascade_mode = "off";
defparam \pessoas|state.S6 .sum_lutc_input = "datac";
defparam \pessoas|state.S6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N5
maxii_lcell \pessoas|state.S7 (
// Equation(s):
// \pessoas|state.S7~regout  = DFFEAS((\pessoas|state.S7~regout  & ((\pessoas|nextstate~1_combout ) # ((\pessoas|state.S6~regout  & \pessoas|always1~0_combout )))) # (!\pessoas|state.S7~regout  & (\pessoas|state.S6~regout  & (\pessoas|always1~0_combout ))), 
// GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(\pessoas|state.S7~regout ),
	.datab(\pessoas|state.S6~regout ),
	.datac(\pessoas|always1~0_combout ),
	.datad(\pessoas|nextstate~1_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\pessoas|state.S7~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|state.S7 .lut_mask = "eac0";
defparam \pessoas|state.S7 .operation_mode = "normal";
defparam \pessoas|state.S7 .output_mode = "reg_only";
defparam \pessoas|state.S7 .register_cascade_mode = "off";
defparam \pessoas|state.S7 .sum_lutc_input = "datac";
defparam \pessoas|state.S7 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_34,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \AI2~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\AI2~combout ),
	.padio(AI2));
// synopsys translate_off
defparam \AI2~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_40,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \AE2~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\AE2~combout ),
	.padio(AE2));
// synopsys translate_off
defparam \AE2~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X7_Y1_N7
maxii_lcell \chamada|A1 (
// Equation(s):
// \chamada|A1~combout  = (((\AI2~combout ) # (\AE2~combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\AI2~combout ),
	.datad(\AE2~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\chamada|A1~combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \chamada|A1 .lut_mask = "fff0";
defparam \chamada|A1 .operation_mode = "normal";
defparam \chamada|A1 .output_mode = "comb_only";
defparam \chamada|A1 .register_cascade_mode = "off";
defparam \chamada|A1 .sum_lutc_input = "datac";
defparam \chamada|A1 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_30,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \AI1~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\AI1~combout ),
	.padio(AI1));
// synopsys translate_off
defparam \AI1~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_38,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \AE1~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\AE1~combout ),
	.padio(AE1));
// synopsys translate_off
defparam \AE1~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X7_Y1_N4
maxii_lcell \andar|always1~0 (
// Equation(s):
// \andar|always1~0_combout  = ((!\AI1~combout  & (!\AE1~combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\AI1~combout ),
	.datac(\AE1~combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\andar|always1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \andar|always1~0 .lut_mask = "0303";
defparam \andar|always1~0 .operation_mode = "normal";
defparam \andar|always1~0 .output_mode = "comb_only";
defparam \andar|always1~0 .register_cascade_mode = "off";
defparam \andar|always1~0 .sum_lutc_input = "datac";
defparam \andar|always1~0 .synch_mode = "off";
// synopsys translate_on

// Location: PIN_42,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \AE3~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\AE3~combout ),
	.padio(AE3));
// synopsys translate_off
defparam \AE3~I .operation_mode = "input";
// synopsys translate_on

// Location: PIN_36,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: Default
maxii_io \AI3~I (
	.datain(gnd),
	.oe(gnd),
	.combout(\AI3~combout ),
	.padio(AI3));
// synopsys translate_off
defparam \AI3~I .operation_mode = "input";
// synopsys translate_on

// Location: LC_X7_Y1_N1
maxii_lcell \andar|mot~3 (
// Equation(s):
// \andar|mot~3_combout  = (!\AE3~combout  & (!\AI3~combout  & ((\chamada|A1~combout ) # (!\andar|always1~0_combout ))))

	.clk(gnd),
	.dataa(\AE3~combout ),
	.datab(\chamada|A1~combout ),
	.datac(\andar|always1~0_combout ),
	.datad(\AI3~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\andar|mot~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \andar|mot~3 .lut_mask = "0045";
defparam \andar|mot~3 .operation_mode = "normal";
defparam \andar|mot~3 .output_mode = "comb_only";
defparam \andar|mot~3 .register_cascade_mode = "off";
defparam \andar|mot~3 .sum_lutc_input = "datac";
defparam \andar|mot~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y1_N6
maxii_lcell \andar|mot~2 (
// Equation(s):
// \andar|mot~2_combout  = (((!\AI3~combout  & !\AE3~combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\AI3~combout ),
	.datad(\AE3~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\andar|mot~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \andar|mot~2 .lut_mask = "000f";
defparam \andar|mot~2 .operation_mode = "normal";
defparam \andar|mot~2 .output_mode = "comb_only";
defparam \andar|mot~2 .register_cascade_mode = "off";
defparam \andar|mot~2 .sum_lutc_input = "datac";
defparam \andar|mot~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N4
maxii_lcell \andar|Selector1~2 (
// Equation(s):
// \andar|Selector1~2_combout  = (\chamada|A1~combout  & ((\andar|state.S1~regout ) # ((\andar|always1~0_combout )))) # (!\chamada|A1~combout  & (\andar|always1~0_combout  & (\andar|state.S1~regout  $ (!\andar|mot~2_combout ))))

	.clk(gnd),
	.dataa(\chamada|A1~combout ),
	.datab(\andar|state.S1~regout ),
	.datac(\andar|mot~2_combout ),
	.datad(\andar|always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\andar|Selector1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \andar|Selector1~2 .lut_mask = "eb88";
defparam \andar|Selector1~2 .operation_mode = "normal";
defparam \andar|Selector1~2 .output_mode = "comb_only";
defparam \andar|Selector1~2 .register_cascade_mode = "off";
defparam \andar|Selector1~2 .sum_lutc_input = "datac";
defparam \andar|Selector1~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N0
maxii_lcell \andar|state.S1 (
// Equation(s):
// \andar|state.S1~regout  = DFFEAS(((\andar|state.S2~regout  & (\andar|mot~3_combout )) # (!\andar|state.S2~regout  & ((\andar|Selector1~2_combout )))), GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(vcc),
	.datab(\andar|state.S2~regout ),
	.datac(\andar|mot~3_combout ),
	.datad(\andar|Selector1~2_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\andar|state.S1~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \andar|state.S1 .lut_mask = "f3c0";
defparam \andar|state.S1 .operation_mode = "normal";
defparam \andar|state.S1 .output_mode = "reg_only";
defparam \andar|state.S1 .register_cascade_mode = "off";
defparam \andar|state.S1 .sum_lutc_input = "datac";
defparam \andar|state.S1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y1_N2
maxii_lcell \elevador|always1~0 (
// Equation(s):
// \elevador|always1~0_combout  = (\AE1~combout ) # ((\AI1~combout ) # ((\AI2~combout ) # (\AE2~combout )))

	.clk(gnd),
	.dataa(\AE1~combout ),
	.datab(\AI1~combout ),
	.datac(\AI2~combout ),
	.datad(\AE2~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\elevador|always1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \elevador|always1~0 .lut_mask = "fffe";
defparam \elevador|always1~0 .operation_mode = "normal";
defparam \elevador|always1~0 .output_mode = "comb_only";
defparam \elevador|always1~0 .register_cascade_mode = "off";
defparam \elevador|always1~0 .sum_lutc_input = "datac";
defparam \elevador|always1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N0
maxii_lcell \andar|state.S2 (
// Equation(s):
// \andar|state.S2~regout  = DFFEAS((\andar|state.S2~regout  & (((!\andar|mot~2_combout ) # (!\elevador|always1~0_combout )))) # (!\andar|state.S2~regout  & (\andar|state.S1~regout  & (!\elevador|always1~0_combout  & !\andar|mot~2_combout ))), 
// GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(\andar|state.S2~regout ),
	.datab(\andar|state.S1~regout ),
	.datac(\elevador|always1~0_combout ),
	.datad(\andar|mot~2_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\andar|state.S2~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \andar|state.S2 .lut_mask = "0aae";
defparam \andar|state.S2 .operation_mode = "normal";
defparam \andar|state.S2 .output_mode = "reg_only";
defparam \andar|state.S2 .register_cascade_mode = "off";
defparam \andar|state.S2 .sum_lutc_input = "datac";
defparam \andar|state.S2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N4
maxii_lcell \elevador|Selector1~0 (
// Equation(s):
// \elevador|Selector1~0_combout  = (!\pessoas|state.S7~regout  & (!\andar|state.S2~regout  & ((\chamada|A1~combout ) # (!\andar|always1~0_combout ))))

	.clk(gnd),
	.dataa(\chamada|A1~combout ),
	.datab(\andar|always1~0_combout ),
	.datac(\pessoas|state.S7~regout ),
	.datad(\andar|state.S2~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\elevador|Selector1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \elevador|Selector1~0 .lut_mask = "000b";
defparam \elevador|Selector1~0 .operation_mode = "normal";
defparam \elevador|Selector1~0 .output_mode = "comb_only";
defparam \elevador|Selector1~0 .register_cascade_mode = "off";
defparam \elevador|Selector1~0 .sum_lutc_input = "datac";
defparam \elevador|Selector1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y1_N8
maxii_lcell \andar|always1~1 (
// Equation(s):
// \andar|always1~1_combout  = (!\AI2~combout  & (!\AE2~combout  & ((\AE1~combout ) # (\AI1~combout ))))

	.clk(gnd),
	.dataa(\AE1~combout ),
	.datab(\AI1~combout ),
	.datac(\AI2~combout ),
	.datad(\AE2~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\andar|always1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \andar|always1~1 .lut_mask = "000e";
defparam \andar|always1~1 .operation_mode = "normal";
defparam \andar|always1~1 .output_mode = "comb_only";
defparam \andar|always1~1 .register_cascade_mode = "off";
defparam \andar|always1~1 .sum_lutc_input = "datac";
defparam \andar|always1~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N7
maxii_lcell \andar|Selector0~0 (
// Equation(s):
// \andar|Selector0~0_combout  = (!\andar|state.S0~regout  & (((!\chamada|A1~combout  & \andar|mot~2_combout )) # (!\andar|always1~0_combout )))

	.clk(gnd),
	.dataa(\andar|state.S0~regout ),
	.datab(\andar|always1~0_combout ),
	.datac(\chamada|A1~combout ),
	.datad(\andar|mot~2_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\andar|Selector0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \andar|Selector0~0 .lut_mask = "1511";
defparam \andar|Selector0~0 .operation_mode = "normal";
defparam \andar|Selector0~0 .output_mode = "comb_only";
defparam \andar|Selector0~0 .register_cascade_mode = "off";
defparam \andar|Selector0~0 .sum_lutc_input = "datac";
defparam \andar|Selector0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N8
maxii_lcell \andar|state.S0 (
// Equation(s):
// \andar|state.S0~regout  = DFFEAS(((!\andar|Selector0~0_combout  & ((!\andar|state.S1~regout ) # (!\andar|always1~1_combout )))), GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(\andar|always1~1_combout ),
	.datab(vcc),
	.datac(\andar|state.S1~regout ),
	.datad(\andar|Selector0~0_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\andar|state.S0~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \andar|state.S0 .lut_mask = "005f";
defparam \andar|state.S0 .operation_mode = "normal";
defparam \andar|state.S0 .output_mode = "reg_only";
defparam \andar|state.S0 .register_cascade_mode = "off";
defparam \andar|state.S0 .sum_lutc_input = "datac";
defparam \andar|state.S0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N1
maxii_lcell \elevador|always1~2 (
// Equation(s):
// \elevador|always1~2_combout  = (!\pessoas|state.S7~regout  & (\andar|state.S0~regout  & ((\chamada|A1~combout ) # (!\andar|mot~2_combout ))))

	.clk(gnd),
	.dataa(\chamada|A1~combout ),
	.datab(\andar|mot~2_combout ),
	.datac(\pessoas|state.S7~regout ),
	.datad(\andar|state.S0~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\elevador|always1~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \elevador|always1~2 .lut_mask = "0b00";
defparam \elevador|always1~2 .operation_mode = "normal";
defparam \elevador|always1~2 .output_mode = "comb_only";
defparam \elevador|always1~2 .register_cascade_mode = "off";
defparam \elevador|always1~2 .sum_lutc_input = "datac";
defparam \elevador|always1~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N6
maxii_lcell \elevador|always1~1 (
// Equation(s):
// \elevador|always1~1_combout  = (\andar|always1~1_combout  & (\andar|mot~2_combout  & (!\pessoas|state.S7~regout  & !\andar|state.S0~regout )))

	.clk(gnd),
	.dataa(\andar|always1~1_combout ),
	.datab(\andar|mot~2_combout ),
	.datac(\pessoas|state.S7~regout ),
	.datad(\andar|state.S0~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\elevador|always1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \elevador|always1~1 .lut_mask = "0008";
defparam \elevador|always1~1 .operation_mode = "normal";
defparam \elevador|always1~1 .output_mode = "comb_only";
defparam \elevador|always1~1 .register_cascade_mode = "off";
defparam \elevador|always1~1 .sum_lutc_input = "datac";
defparam \elevador|always1~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N6
maxii_lcell \elevador|state.S0 (
// Equation(s):
// \elevador|state.S0~regout  = DFFEAS((\elevador|state.S0~regout  & (((!\elevador|always1~1_combout )) # (!\elevador|state.S1~regout ))) # (!\elevador|state.S0~regout  & (\elevador|always1~2_combout  & ((!\elevador|always1~1_combout ) # 
// (!\elevador|state.S1~regout )))), GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(\elevador|state.S0~regout ),
	.datab(\elevador|state.S1~regout ),
	.datac(\elevador|always1~1_combout ),
	.datad(\elevador|always1~2_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\elevador|state.S0~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \elevador|state.S0 .lut_mask = "3f2a";
defparam \elevador|state.S0 .operation_mode = "normal";
defparam \elevador|state.S0 .output_mode = "reg_only";
defparam \elevador|state.S0 .register_cascade_mode = "off";
defparam \elevador|state.S0 .sum_lutc_input = "datac";
defparam \elevador|state.S0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N2
maxii_lcell \elevador|always1~3 (
// Equation(s):
// \elevador|always1~3_combout  = (!\elevador|always1~0_combout  & (!\andar|mot~2_combout  & (!\pessoas|state.S7~regout  & \andar|state.S2~regout )))

	.clk(gnd),
	.dataa(\elevador|always1~0_combout ),
	.datab(\andar|mot~2_combout ),
	.datac(\pessoas|state.S7~regout ),
	.datad(\andar|state.S2~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\elevador|always1~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \elevador|always1~3 .lut_mask = "0100";
defparam \elevador|always1~3 .operation_mode = "normal";
defparam \elevador|always1~3 .output_mode = "comb_only";
defparam \elevador|always1~3 .register_cascade_mode = "off";
defparam \elevador|always1~3 .sum_lutc_input = "datac";
defparam \elevador|always1~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N3
maxii_lcell \elevador|Selector1~1 (
// Equation(s):
// \elevador|Selector1~1_combout  = (\elevador|state.S1~regout  & (!\elevador|always1~1_combout  & ((!\elevador|always1~3_combout )))) # (!\elevador|state.S1~regout  & (((\elevador|Selector1~0_combout ))))

	.clk(gnd),
	.dataa(\elevador|always1~1_combout ),
	.datab(\elevador|state.S1~regout ),
	.datac(\elevador|Selector1~0_combout ),
	.datad(\elevador|always1~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\elevador|Selector1~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \elevador|Selector1~1 .lut_mask = "3074";
defparam \elevador|Selector1~1 .operation_mode = "normal";
defparam \elevador|Selector1~1 .output_mode = "comb_only";
defparam \elevador|Selector1~1 .register_cascade_mode = "off";
defparam \elevador|Selector1~1 .sum_lutc_input = "datac";
defparam \elevador|Selector1~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y2_N9
maxii_lcell \elevador|state.S1 (
// Equation(s):
// \elevador|state.S1~regout  = DFFEAS(((\elevador|state.S0~regout  & ((\elevador|Selector1~1_combout ))) # (!\elevador|state.S0~regout  & (\elevador|always1~2_combout ))), GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(vcc),
	.datab(\elevador|always1~2_combout ),
	.datac(\elevador|state.S0~regout ),
	.datad(\elevador|Selector1~1_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\elevador|state.S1~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \elevador|state.S1 .lut_mask = "fc0c";
defparam \elevador|state.S1 .operation_mode = "normal";
defparam \elevador|state.S1 .output_mode = "reg_only";
defparam \elevador|state.S1 .register_cascade_mode = "off";
defparam \elevador|state.S1 .sum_lutc_input = "datac";
defparam \elevador|state.S1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N6
maxii_lcell \elevador|state.S2 (
// Equation(s):
// \elevador|state.S2~regout  = DFFEAS((\elevador|state.S2~regout  & (((\elevador|state.S1~regout  & \elevador|always1~3_combout )) # (!\elevador|Selector1~0_combout ))) # (!\elevador|state.S2~regout  & (((\elevador|state.S1~regout  & 
// \elevador|always1~3_combout )))), GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(\elevador|state.S2~regout ),
	.datab(\elevador|Selector1~0_combout ),
	.datac(\elevador|state.S1~regout ),
	.datad(\elevador|always1~3_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\elevador|state.S2~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \elevador|state.S2 .lut_mask = "f222";
defparam \elevador|state.S2 .operation_mode = "normal";
defparam \elevador|state.S2 .output_mode = "reg_only";
defparam \elevador|state.S2 .register_cascade_mode = "off";
defparam \elevador|state.S2 .sum_lutc_input = "datac";
defparam \elevador|state.S2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N8
maxii_lcell \porta|always1~0 (
// Equation(s):
// \porta|always1~0_combout  = (\elevador|state.S2~regout  & (\andar|state.S2~regout  & (\andar|state.S1~regout  $ (!\elevador|state.S1~regout )))) # (!\elevador|state.S2~regout  & (!\andar|state.S2~regout  & (\andar|state.S1~regout  $ 
// (!\elevador|state.S1~regout ))))

	.clk(gnd),
	.dataa(\elevador|state.S2~regout ),
	.datab(\andar|state.S1~regout ),
	.datac(\elevador|state.S1~regout ),
	.datad(\andar|state.S2~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\porta|always1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \porta|always1~0 .lut_mask = "8241";
defparam \porta|always1~0 .operation_mode = "normal";
defparam \porta|always1~0 .output_mode = "comb_only";
defparam \porta|always1~0 .register_cascade_mode = "off";
defparam \porta|always1~0 .sum_lutc_input = "datac";
defparam \porta|always1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N3
maxii_lcell \porta|state.S2 (
// Equation(s):
// \porta|state.S2~regout  = DFFEAS((\pessoas|state.S7~regout  & (\porta|state.S1~regout )) # (!\pessoas|state.S7~regout  & ((\porta|always1~0_combout  & (\porta|state.S1~regout )) # (!\porta|always1~0_combout  & ((\porta|state.S3~regout ))))), 
// GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(\porta|state.S1~regout ),
	.datab(\pessoas|state.S7~regout ),
	.datac(\porta|state.S3~regout ),
	.datad(\porta|always1~0_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\porta|state.S2~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \porta|state.S2 .lut_mask = "aab8";
defparam \porta|state.S2 .operation_mode = "normal";
defparam \porta|state.S2 .output_mode = "reg_only";
defparam \porta|state.S2 .register_cascade_mode = "off";
defparam \porta|state.S2 .sum_lutc_input = "datac";
defparam \porta|state.S2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N7
maxii_lcell \porta|state.S0 (
// Equation(s):
// \porta|state.S0~regout  = DFFEAS((\pessoas|state.S7~regout ) # ((\porta|always1~0_combout ) # ((!\porta|state.S1~regout  & \porta|state.S0~regout ))), GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(\porta|state.S1~regout ),
	.datab(\pessoas|state.S7~regout ),
	.datac(\porta|state.S0~regout ),
	.datad(\porta|always1~0_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\porta|state.S0~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \porta|state.S0 .lut_mask = "ffdc";
defparam \porta|state.S0 .operation_mode = "normal";
defparam \porta|state.S0 .output_mode = "reg_only";
defparam \porta|state.S0 .register_cascade_mode = "off";
defparam \porta|state.S0 .sum_lutc_input = "datac";
defparam \porta|state.S0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N1
maxii_lcell \porta|state.S1 (
// Equation(s):
// \porta|state.S1~regout  = DFFEAS((\pessoas|state.S7~regout  & (((!\porta|state.S0~regout )))) # (!\pessoas|state.S7~regout  & ((\porta|always1~0_combout  & ((!\porta|state.S0~regout ))) # (!\porta|always1~0_combout  & (\porta|state.S2~regout )))), 
// GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(\porta|state.S2~regout ),
	.datab(\pessoas|state.S7~regout ),
	.datac(\porta|state.S0~regout ),
	.datad(\porta|always1~0_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\porta|state.S1~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \porta|state.S1 .lut_mask = "0f2e";
defparam \porta|state.S1 .operation_mode = "normal";
defparam \porta|state.S1 .output_mode = "reg_only";
defparam \porta|state.S1 .register_cascade_mode = "off";
defparam \porta|state.S1 .sum_lutc_input = "datac";
defparam \porta|state.S1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N9
maxii_lcell \porta|state.S3 (
// Equation(s):
// \porta|state.S3~regout  = DFFEAS((!\porta|state.S1~regout  & (\porta|state.S0~regout  & ((\pessoas|state.S7~regout ) # (\porta|always1~0_combout )))), GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(\porta|state.S1~regout ),
	.datab(\pessoas|state.S7~regout ),
	.datac(\porta|state.S0~regout ),
	.datad(\porta|always1~0_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\porta|state.S3~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \porta|state.S3 .lut_mask = "5040";
defparam \porta|state.S3 .operation_mode = "normal";
defparam \porta|state.S3 .output_mode = "reg_only";
defparam \porta|state.S3 .register_cascade_mode = "off";
defparam \porta|state.S3 .sum_lutc_input = "datac";
defparam \porta|state.S3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X6_Y3_N5
maxii_lcell \pessoas|nextstate~1 (
// Equation(s):
// \pessoas|nextstate~1_combout  = (((\B2~combout ) # (!\porta|state.S3~regout )) # (!\B1~combout ))

	.clk(gnd),
	.dataa(vcc),
	.datab(\B1~combout ),
	.datac(\B2~combout ),
	.datad(\porta|state.S3~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\pessoas|nextstate~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|nextstate~1 .lut_mask = "f3ff";
defparam \pessoas|nextstate~1 .operation_mode = "normal";
defparam \pessoas|nextstate~1 .output_mode = "comb_only";
defparam \pessoas|nextstate~1 .register_cascade_mode = "off";
defparam \pessoas|nextstate~1 .sum_lutc_input = "datac";
defparam \pessoas|nextstate~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N1
maxii_lcell \pessoas|state.S0 (
// Equation(s):
// \pessoas|state.S0~regout  = DFFEAS((\pessoas|state.S1~regout  & (\pessoas|nextstate~1_combout  & ((\pessoas|always1~0_combout ) # (\pessoas|state.S0~regout )))) # (!\pessoas|state.S1~regout  & ((\pessoas|always1~0_combout ) # ((\pessoas|state.S0~regout 
// )))), GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(\pessoas|state.S1~regout ),
	.datab(\pessoas|always1~0_combout ),
	.datac(\pessoas|state.S0~regout ),
	.datad(\pessoas|nextstate~1_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\pessoas|state.S0~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|state.S0 .lut_mask = "fc54";
defparam \pessoas|state.S0 .operation_mode = "normal";
defparam \pessoas|state.S0 .output_mode = "reg_only";
defparam \pessoas|state.S0 .register_cascade_mode = "off";
defparam \pessoas|state.S0 .sum_lutc_input = "datac";
defparam \pessoas|state.S0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N3
maxii_lcell \pessoas|Selector1~0 (
// Equation(s):
// \pessoas|Selector1~0_combout  = (\pessoas|state.S1~regout  & (((!\pessoas|state.S0~regout  & \pessoas|always1~0_combout )) # (!\pessoas|nextstate~0_combout ))) # (!\pessoas|state.S1~regout  & (!\pessoas|state.S0~regout  & ((\pessoas|always1~0_combout ))))

	.clk(gnd),
	.dataa(\pessoas|state.S1~regout ),
	.datab(\pessoas|state.S0~regout ),
	.datac(\pessoas|nextstate~0_combout ),
	.datad(\pessoas|always1~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\pessoas|Selector1~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|Selector1~0 .lut_mask = "3b0a";
defparam \pessoas|Selector1~0 .operation_mode = "normal";
defparam \pessoas|Selector1~0 .output_mode = "comb_only";
defparam \pessoas|Selector1~0 .register_cascade_mode = "off";
defparam \pessoas|Selector1~0 .sum_lutc_input = "datac";
defparam \pessoas|Selector1~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N4
maxii_lcell \pessoas|state.S1 (
// Equation(s):
// \pessoas|state.S1~regout  = DFFEAS(((\pessoas|Selector1~0_combout ) # ((!\pessoas|nextstate~1_combout  & \pessoas|state.S2~regout ))), GLOBAL(\divisor1s|clock_out~regout ), GLOBAL(\reset0~combout ), , , , , , )

	.clk(\divisor1s|clock_out~regout ),
	.dataa(vcc),
	.datab(\pessoas|nextstate~1_combout ),
	.datac(\pessoas|state.S2~regout ),
	.datad(\pessoas|Selector1~0_combout ),
	.aclr(!\reset0~combout ),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\pessoas|state.S1~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|state.S1 .lut_mask = "ff30";
defparam \pessoas|state.S1 .operation_mode = "normal";
defparam \pessoas|state.S1 .output_mode = "reg_only";
defparam \pessoas|state.S1 .register_cascade_mode = "off";
defparam \pessoas|state.S1 .sum_lutc_input = "datac";
defparam \pessoas|state.S1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N2
maxii_lcell \pessoas|WideOr9~0 (
// Equation(s):
// \pessoas|WideOr9~0_combout  = (\pessoas|state.S1~regout ) # ((\pessoas|state.S5~regout ) # ((\pessoas|state.S4~regout ) # (!\pessoas|state.S0~regout )))

	.clk(gnd),
	.dataa(\pessoas|state.S1~regout ),
	.datab(\pessoas|state.S5~regout ),
	.datac(\pessoas|state.S4~regout ),
	.datad(\pessoas|state.S0~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\pessoas|WideOr9~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|WideOr9~0 .lut_mask = "feff";
defparam \pessoas|WideOr9~0 .operation_mode = "normal";
defparam \pessoas|WideOr9~0 .output_mode = "comb_only";
defparam \pessoas|WideOr9~0 .register_cascade_mode = "off";
defparam \pessoas|WideOr9~0 .sum_lutc_input = "datac";
defparam \pessoas|WideOr9~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N5
maxii_lcell \pessoas|WideOr8~0 (
// Equation(s):
// \pessoas|WideOr8~0_combout  = (\pessoas|state.S1~regout ) # (((\pessoas|state.S2~regout ) # (\pessoas|state.S3~regout )) # (!\pessoas|state.S0~regout ))

	.clk(gnd),
	.dataa(\pessoas|state.S1~regout ),
	.datab(\pessoas|state.S0~regout ),
	.datac(\pessoas|state.S2~regout ),
	.datad(\pessoas|state.S3~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\pessoas|WideOr8~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|WideOr8~0 .lut_mask = "fffb";
defparam \pessoas|WideOr8~0 .operation_mode = "normal";
defparam \pessoas|WideOr8~0 .output_mode = "comb_only";
defparam \pessoas|WideOr8~0 .register_cascade_mode = "off";
defparam \pessoas|WideOr8~0 .sum_lutc_input = "datac";
defparam \pessoas|WideOr8~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y3_N0
maxii_lcell \pessoas|WideOr10~0 (
// Equation(s):
// \pessoas|WideOr10~0_combout  = (\pessoas|state.S6~regout ) # ((\pessoas|state.S2~regout ) # ((\pessoas|state.S4~regout ) # (!\pessoas|state.S0~regout )))

	.clk(gnd),
	.dataa(\pessoas|state.S6~regout ),
	.datab(\pessoas|state.S2~regout ),
	.datac(\pessoas|state.S4~regout ),
	.datad(\pessoas|state.S0~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\pessoas|WideOr10~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \pessoas|WideOr10~0 .lut_mask = "feff";
defparam \pessoas|WideOr10~0 .operation_mode = "normal";
defparam \pessoas|WideOr10~0 .output_mode = "comb_only";
defparam \pessoas|WideOr10~0 .register_cascade_mode = "off";
defparam \pessoas|WideOr10~0 .sum_lutc_input = "datac";
defparam \pessoas|WideOr10~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y4_N1
maxii_lcell \multiplexe|disp[0]~0 (
// Equation(s):
// \multiplexe|disp[0]~0_combout  = (\pessoas|WideOr8~0_combout  $ (((\pessoas|WideOr10~0_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\pessoas|WideOr8~0_combout ),
	.datac(vcc),
	.datad(\pessoas|WideOr10~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\multiplexe|disp[0]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \multiplexe|disp[0]~0 .lut_mask = "33cc";
defparam \multiplexe|disp[0]~0 .operation_mode = "normal";
defparam \multiplexe|disp[0]~0 .output_mode = "comb_only";
defparam \multiplexe|disp[0]~0 .register_cascade_mode = "off";
defparam \multiplexe|disp[0]~0 .sum_lutc_input = "datac";
defparam \multiplexe|disp[0]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N4
maxii_lcell \fazmux|counter[0] (
// Equation(s):
// \fazmux|counter [0] = DFFEAS((!\fazmux|counter [0]), GLOBAL(\clk~combout ), VCC, , , , , \fazmux|LessThan0~3_combout , )
// \fazmux|counter[0]~23  = CARRY((\fazmux|counter [0]))

	.clk(\clk~combout ),
	.dataa(\fazmux|counter [0]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\fazmux|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fazmux|counter [0]),
	.cout(\fazmux|counter[0]~23 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \fazmux|counter[0] .lut_mask = "55aa";
defparam \fazmux|counter[0] .operation_mode = "arithmetic";
defparam \fazmux|counter[0] .output_mode = "reg_only";
defparam \fazmux|counter[0] .register_cascade_mode = "off";
defparam \fazmux|counter[0] .sum_lutc_input = "datac";
defparam \fazmux|counter[0] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N5
maxii_lcell \fazmux|counter[1] (
// Equation(s):
// \fazmux|counter [1] = DFFEAS(\fazmux|counter [1] $ ((((\fazmux|counter[0]~23 )))), GLOBAL(\clk~combout ), VCC, , , , , \fazmux|LessThan0~3_combout , )
// \fazmux|counter[1]~1  = CARRY(((!\fazmux|counter[0]~23 )) # (!\fazmux|counter [1]))
// \fazmux|counter[1]~1COUT1_25  = CARRY(((!\fazmux|counter[0]~23 )) # (!\fazmux|counter [1]))

	.clk(\clk~combout ),
	.dataa(\fazmux|counter [1]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\fazmux|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\fazmux|counter[0]~23 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fazmux|counter [1]),
	.cout(),
	.cout0(\fazmux|counter[1]~1 ),
	.cout1(\fazmux|counter[1]~1COUT1_25 ));
// synopsys translate_off
defparam \fazmux|counter[1] .cin_used = "true";
defparam \fazmux|counter[1] .lut_mask = "5a5f";
defparam \fazmux|counter[1] .operation_mode = "arithmetic";
defparam \fazmux|counter[1] .output_mode = "reg_only";
defparam \fazmux|counter[1] .register_cascade_mode = "off";
defparam \fazmux|counter[1] .sum_lutc_input = "cin";
defparam \fazmux|counter[1] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N6
maxii_lcell \fazmux|counter[2] (
// Equation(s):
// \fazmux|counter [2] = DFFEAS(\fazmux|counter [2] $ ((((!(!\fazmux|counter[0]~23  & \fazmux|counter[1]~1 ) # (\fazmux|counter[0]~23  & \fazmux|counter[1]~1COUT1_25 ))))), GLOBAL(\clk~combout ), VCC, , , , , \fazmux|LessThan0~3_combout , )
// \fazmux|counter[2]~3  = CARRY((\fazmux|counter [2] & ((!\fazmux|counter[1]~1 ))))
// \fazmux|counter[2]~3COUT1_26  = CARRY((\fazmux|counter [2] & ((!\fazmux|counter[1]~1COUT1_25 ))))

	.clk(\clk~combout ),
	.dataa(\fazmux|counter [2]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\fazmux|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\fazmux|counter[0]~23 ),
	.cin0(\fazmux|counter[1]~1 ),
	.cin1(\fazmux|counter[1]~1COUT1_25 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fazmux|counter [2]),
	.cout(),
	.cout0(\fazmux|counter[2]~3 ),
	.cout1(\fazmux|counter[2]~3COUT1_26 ));
// synopsys translate_off
defparam \fazmux|counter[2] .cin0_used = "true";
defparam \fazmux|counter[2] .cin1_used = "true";
defparam \fazmux|counter[2] .cin_used = "true";
defparam \fazmux|counter[2] .lut_mask = "a50a";
defparam \fazmux|counter[2] .operation_mode = "arithmetic";
defparam \fazmux|counter[2] .output_mode = "reg_only";
defparam \fazmux|counter[2] .register_cascade_mode = "off";
defparam \fazmux|counter[2] .sum_lutc_input = "cin";
defparam \fazmux|counter[2] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N7
maxii_lcell \fazmux|counter[3] (
// Equation(s):
// \fazmux|counter [3] = DFFEAS(\fazmux|counter [3] $ (((((!\fazmux|counter[0]~23  & \fazmux|counter[2]~3 ) # (\fazmux|counter[0]~23  & \fazmux|counter[2]~3COUT1_26 ))))), GLOBAL(\clk~combout ), VCC, , , , , \fazmux|LessThan0~3_combout , )
// \fazmux|counter[3]~5  = CARRY(((!\fazmux|counter[2]~3 )) # (!\fazmux|counter [3]))
// \fazmux|counter[3]~5COUT1_27  = CARRY(((!\fazmux|counter[2]~3COUT1_26 )) # (!\fazmux|counter [3]))

	.clk(\clk~combout ),
	.dataa(\fazmux|counter [3]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\fazmux|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\fazmux|counter[0]~23 ),
	.cin0(\fazmux|counter[2]~3 ),
	.cin1(\fazmux|counter[2]~3COUT1_26 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fazmux|counter [3]),
	.cout(),
	.cout0(\fazmux|counter[3]~5 ),
	.cout1(\fazmux|counter[3]~5COUT1_27 ));
// synopsys translate_off
defparam \fazmux|counter[3] .cin0_used = "true";
defparam \fazmux|counter[3] .cin1_used = "true";
defparam \fazmux|counter[3] .cin_used = "true";
defparam \fazmux|counter[3] .lut_mask = "5a5f";
defparam \fazmux|counter[3] .operation_mode = "arithmetic";
defparam \fazmux|counter[3] .output_mode = "reg_only";
defparam \fazmux|counter[3] .register_cascade_mode = "off";
defparam \fazmux|counter[3] .sum_lutc_input = "cin";
defparam \fazmux|counter[3] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N8
maxii_lcell \fazmux|counter[4] (
// Equation(s):
// \fazmux|counter [4] = DFFEAS(\fazmux|counter [4] $ ((((!(!\fazmux|counter[0]~23  & \fazmux|counter[3]~5 ) # (\fazmux|counter[0]~23  & \fazmux|counter[3]~5COUT1_27 ))))), GLOBAL(\clk~combout ), VCC, , , , , \fazmux|LessThan0~3_combout , )
// \fazmux|counter[4]~7  = CARRY((\fazmux|counter [4] & ((!\fazmux|counter[3]~5 ))))
// \fazmux|counter[4]~7COUT1_28  = CARRY((\fazmux|counter [4] & ((!\fazmux|counter[3]~5COUT1_27 ))))

	.clk(\clk~combout ),
	.dataa(\fazmux|counter [4]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\fazmux|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\fazmux|counter[0]~23 ),
	.cin0(\fazmux|counter[3]~5 ),
	.cin1(\fazmux|counter[3]~5COUT1_27 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fazmux|counter [4]),
	.cout(),
	.cout0(\fazmux|counter[4]~7 ),
	.cout1(\fazmux|counter[4]~7COUT1_28 ));
// synopsys translate_off
defparam \fazmux|counter[4] .cin0_used = "true";
defparam \fazmux|counter[4] .cin1_used = "true";
defparam \fazmux|counter[4] .cin_used = "true";
defparam \fazmux|counter[4] .lut_mask = "a50a";
defparam \fazmux|counter[4] .operation_mode = "arithmetic";
defparam \fazmux|counter[4] .output_mode = "reg_only";
defparam \fazmux|counter[4] .register_cascade_mode = "off";
defparam \fazmux|counter[4] .sum_lutc_input = "cin";
defparam \fazmux|counter[4] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X3_Y2_N9
maxii_lcell \fazmux|counter[5] (
// Equation(s):
// \fazmux|counter [5] = DFFEAS((\fazmux|counter [5] $ (((!\fazmux|counter[0]~23  & \fazmux|counter[4]~7 ) # (\fazmux|counter[0]~23  & \fazmux|counter[4]~7COUT1_28 )))), GLOBAL(\clk~combout ), VCC, , , , , \fazmux|LessThan0~3_combout , )
// \fazmux|counter[5]~9  = CARRY(((!\fazmux|counter[4]~7COUT1_28 ) # (!\fazmux|counter [5])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\fazmux|counter [5]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\fazmux|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\fazmux|counter[0]~23 ),
	.cin0(\fazmux|counter[4]~7 ),
	.cin1(\fazmux|counter[4]~7COUT1_28 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fazmux|counter [5]),
	.cout(\fazmux|counter[5]~9 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \fazmux|counter[5] .cin0_used = "true";
defparam \fazmux|counter[5] .cin1_used = "true";
defparam \fazmux|counter[5] .cin_used = "true";
defparam \fazmux|counter[5] .lut_mask = "3c3f";
defparam \fazmux|counter[5] .operation_mode = "arithmetic";
defparam \fazmux|counter[5] .output_mode = "reg_only";
defparam \fazmux|counter[5] .register_cascade_mode = "off";
defparam \fazmux|counter[5] .sum_lutc_input = "cin";
defparam \fazmux|counter[5] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y2_N0
maxii_lcell \fazmux|counter[6] (
// Equation(s):
// \fazmux|counter [6] = DFFEAS((\fazmux|counter [6] $ ((!\fazmux|counter[5]~9 ))), GLOBAL(\clk~combout ), VCC, , , , , \fazmux|LessThan0~3_combout , )
// \fazmux|counter[6]~11  = CARRY(((\fazmux|counter [6] & !\fazmux|counter[5]~9 )))
// \fazmux|counter[6]~11COUT1_29  = CARRY(((\fazmux|counter [6] & !\fazmux|counter[5]~9 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\fazmux|counter [6]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\fazmux|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\fazmux|counter[5]~9 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fazmux|counter [6]),
	.cout(),
	.cout0(\fazmux|counter[6]~11 ),
	.cout1(\fazmux|counter[6]~11COUT1_29 ));
// synopsys translate_off
defparam \fazmux|counter[6] .cin_used = "true";
defparam \fazmux|counter[6] .lut_mask = "c30c";
defparam \fazmux|counter[6] .operation_mode = "arithmetic";
defparam \fazmux|counter[6] .output_mode = "reg_only";
defparam \fazmux|counter[6] .register_cascade_mode = "off";
defparam \fazmux|counter[6] .sum_lutc_input = "cin";
defparam \fazmux|counter[6] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y2_N1
maxii_lcell \fazmux|counter[7] (
// Equation(s):
// \fazmux|counter [7] = DFFEAS((\fazmux|counter [7] $ (((!\fazmux|counter[5]~9  & \fazmux|counter[6]~11 ) # (\fazmux|counter[5]~9  & \fazmux|counter[6]~11COUT1_29 )))), GLOBAL(\clk~combout ), VCC, , , , , \fazmux|LessThan0~3_combout , )
// \fazmux|counter[7]~13  = CARRY(((!\fazmux|counter[6]~11 ) # (!\fazmux|counter [7])))
// \fazmux|counter[7]~13COUT1_30  = CARRY(((!\fazmux|counter[6]~11COUT1_29 ) # (!\fazmux|counter [7])))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\fazmux|counter [7]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\fazmux|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\fazmux|counter[5]~9 ),
	.cin0(\fazmux|counter[6]~11 ),
	.cin1(\fazmux|counter[6]~11COUT1_29 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fazmux|counter [7]),
	.cout(),
	.cout0(\fazmux|counter[7]~13 ),
	.cout1(\fazmux|counter[7]~13COUT1_30 ));
// synopsys translate_off
defparam \fazmux|counter[7] .cin0_used = "true";
defparam \fazmux|counter[7] .cin1_used = "true";
defparam \fazmux|counter[7] .cin_used = "true";
defparam \fazmux|counter[7] .lut_mask = "3c3f";
defparam \fazmux|counter[7] .operation_mode = "arithmetic";
defparam \fazmux|counter[7] .output_mode = "reg_only";
defparam \fazmux|counter[7] .register_cascade_mode = "off";
defparam \fazmux|counter[7] .sum_lutc_input = "cin";
defparam \fazmux|counter[7] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y2_N2
maxii_lcell \fazmux|counter[8] (
// Equation(s):
// \fazmux|counter [8] = DFFEAS((\fazmux|counter [8] $ ((!(!\fazmux|counter[5]~9  & \fazmux|counter[7]~13 ) # (\fazmux|counter[5]~9  & \fazmux|counter[7]~13COUT1_30 )))), GLOBAL(\clk~combout ), VCC, , , , , \fazmux|LessThan0~3_combout , )
// \fazmux|counter[8]~15  = CARRY(((\fazmux|counter [8] & !\fazmux|counter[7]~13 )))
// \fazmux|counter[8]~15COUT1_31  = CARRY(((\fazmux|counter [8] & !\fazmux|counter[7]~13COUT1_30 )))

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(\fazmux|counter [8]),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\fazmux|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\fazmux|counter[5]~9 ),
	.cin0(\fazmux|counter[7]~13 ),
	.cin1(\fazmux|counter[7]~13COUT1_30 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fazmux|counter [8]),
	.cout(),
	.cout0(\fazmux|counter[8]~15 ),
	.cout1(\fazmux|counter[8]~15COUT1_31 ));
// synopsys translate_off
defparam \fazmux|counter[8] .cin0_used = "true";
defparam \fazmux|counter[8] .cin1_used = "true";
defparam \fazmux|counter[8] .cin_used = "true";
defparam \fazmux|counter[8] .lut_mask = "c30c";
defparam \fazmux|counter[8] .operation_mode = "arithmetic";
defparam \fazmux|counter[8] .output_mode = "reg_only";
defparam \fazmux|counter[8] .register_cascade_mode = "off";
defparam \fazmux|counter[8] .sum_lutc_input = "cin";
defparam \fazmux|counter[8] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y2_N3
maxii_lcell \fazmux|counter[9] (
// Equation(s):
// \fazmux|counter [9] = DFFEAS(\fazmux|counter [9] $ (((((!\fazmux|counter[5]~9  & \fazmux|counter[8]~15 ) # (\fazmux|counter[5]~9  & \fazmux|counter[8]~15COUT1_31 ))))), GLOBAL(\clk~combout ), VCC, , , , , \fazmux|LessThan0~3_combout , )
// \fazmux|counter[9]~21  = CARRY(((!\fazmux|counter[8]~15 )) # (!\fazmux|counter [9]))
// \fazmux|counter[9]~21COUT1_32  = CARRY(((!\fazmux|counter[8]~15COUT1_31 )) # (!\fazmux|counter [9]))

	.clk(\clk~combout ),
	.dataa(\fazmux|counter [9]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\fazmux|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\fazmux|counter[5]~9 ),
	.cin0(\fazmux|counter[8]~15 ),
	.cin1(\fazmux|counter[8]~15COUT1_31 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fazmux|counter [9]),
	.cout(),
	.cout0(\fazmux|counter[9]~21 ),
	.cout1(\fazmux|counter[9]~21COUT1_32 ));
// synopsys translate_off
defparam \fazmux|counter[9] .cin0_used = "true";
defparam \fazmux|counter[9] .cin1_used = "true";
defparam \fazmux|counter[9] .cin_used = "true";
defparam \fazmux|counter[9] .lut_mask = "5a5f";
defparam \fazmux|counter[9] .operation_mode = "arithmetic";
defparam \fazmux|counter[9] .output_mode = "reg_only";
defparam \fazmux|counter[9] .register_cascade_mode = "off";
defparam \fazmux|counter[9] .sum_lutc_input = "cin";
defparam \fazmux|counter[9] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y2_N4
maxii_lcell \fazmux|counter[10] (
// Equation(s):
// \fazmux|counter [10] = DFFEAS(\fazmux|counter [10] $ ((((!(!\fazmux|counter[5]~9  & \fazmux|counter[9]~21 ) # (\fazmux|counter[5]~9  & \fazmux|counter[9]~21COUT1_32 ))))), GLOBAL(\clk~combout ), VCC, , , , , \fazmux|LessThan0~3_combout , )
// \fazmux|counter[10]~17  = CARRY((\fazmux|counter [10] & ((!\fazmux|counter[9]~21COUT1_32 ))))

	.clk(\clk~combout ),
	.dataa(\fazmux|counter [10]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\fazmux|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\fazmux|counter[5]~9 ),
	.cin0(\fazmux|counter[9]~21 ),
	.cin1(\fazmux|counter[9]~21COUT1_32 ),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fazmux|counter [10]),
	.cout(\fazmux|counter[10]~17 ),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \fazmux|counter[10] .cin0_used = "true";
defparam \fazmux|counter[10] .cin1_used = "true";
defparam \fazmux|counter[10] .cin_used = "true";
defparam \fazmux|counter[10] .lut_mask = "a50a";
defparam \fazmux|counter[10] .operation_mode = "arithmetic";
defparam \fazmux|counter[10] .output_mode = "reg_only";
defparam \fazmux|counter[10] .register_cascade_mode = "off";
defparam \fazmux|counter[10] .sum_lutc_input = "cin";
defparam \fazmux|counter[10] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y2_N5
maxii_lcell \fazmux|counter[11] (
// Equation(s):
// \fazmux|counter [11] = DFFEAS(\fazmux|counter [11] $ ((((\fazmux|counter[10]~17 )))), GLOBAL(\clk~combout ), VCC, , , , , \fazmux|LessThan0~3_combout , )

	.clk(\clk~combout ),
	.dataa(\fazmux|counter [11]),
	.datab(vcc),
	.datac(vcc),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(\fazmux|LessThan0~3_combout ),
	.sload(gnd),
	.ena(vcc),
	.cin(\fazmux|counter[10]~17 ),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fazmux|counter [11]),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \fazmux|counter[11] .cin_used = "true";
defparam \fazmux|counter[11] .lut_mask = "5a5a";
defparam \fazmux|counter[11] .operation_mode = "normal";
defparam \fazmux|counter[11] .output_mode = "reg_only";
defparam \fazmux|counter[11] .register_cascade_mode = "off";
defparam \fazmux|counter[11] .sum_lutc_input = "cin";
defparam \fazmux|counter[11] .synch_mode = "on";
// synopsys translate_on

// Location: LC_X4_Y2_N9
maxii_lcell \fazmux|LessThan0~2 (
// Equation(s):
// \fazmux|LessThan0~2_combout  = (((!\fazmux|counter [10]))) # (!\fazmux|counter [11])

	.clk(gnd),
	.dataa(\fazmux|counter [11]),
	.datab(vcc),
	.datac(\fazmux|counter [10]),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\fazmux|LessThan0~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \fazmux|LessThan0~2 .lut_mask = "5f5f";
defparam \fazmux|LessThan0~2 .operation_mode = "normal";
defparam \fazmux|LessThan0~2 .output_mode = "comb_only";
defparam \fazmux|LessThan0~2 .register_cascade_mode = "off";
defparam \fazmux|LessThan0~2 .sum_lutc_input = "datac";
defparam \fazmux|LessThan0~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N7
maxii_lcell \fazmux|LessThan0~1 (
// Equation(s):
// \fazmux|LessThan0~1_combout  = (((!\fazmux|counter [7]) # (!\fazmux|counter [6])) # (!\fazmux|counter [8])) # (!\fazmux|counter [5])

	.clk(gnd),
	.dataa(\fazmux|counter [5]),
	.datab(\fazmux|counter [8]),
	.datac(\fazmux|counter [6]),
	.datad(\fazmux|counter [7]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\fazmux|LessThan0~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \fazmux|LessThan0~1 .lut_mask = "7fff";
defparam \fazmux|LessThan0~1 .operation_mode = "normal";
defparam \fazmux|LessThan0~1 .output_mode = "comb_only";
defparam \fazmux|LessThan0~1 .register_cascade_mode = "off";
defparam \fazmux|LessThan0~1 .sum_lutc_input = "datac";
defparam \fazmux|LessThan0~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X3_Y2_N2
maxii_lcell \fazmux|LessThan0~0 (
// Equation(s):
// \fazmux|LessThan0~0_combout  = (((!\fazmux|counter [4]) # (!\fazmux|counter [1])) # (!\fazmux|counter [3])) # (!\fazmux|counter [2])

	.clk(gnd),
	.dataa(\fazmux|counter [2]),
	.datab(\fazmux|counter [3]),
	.datac(\fazmux|counter [1]),
	.datad(\fazmux|counter [4]),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\fazmux|LessThan0~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \fazmux|LessThan0~0 .lut_mask = "7fff";
defparam \fazmux|LessThan0~0 .operation_mode = "normal";
defparam \fazmux|LessThan0~0 .output_mode = "comb_only";
defparam \fazmux|LessThan0~0 .register_cascade_mode = "off";
defparam \fazmux|LessThan0~0 .sum_lutc_input = "datac";
defparam \fazmux|LessThan0~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N8
maxii_lcell \fazmux|LessThan0~3 (
// Equation(s):
// \fazmux|LessThan0~3_combout  = (\fazmux|counter [9] & (!\fazmux|LessThan0~2_combout  & (!\fazmux|LessThan0~1_combout  & !\fazmux|LessThan0~0_combout )))

	.clk(gnd),
	.dataa(\fazmux|counter [9]),
	.datab(\fazmux|LessThan0~2_combout ),
	.datac(\fazmux|LessThan0~1_combout ),
	.datad(\fazmux|LessThan0~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\fazmux|LessThan0~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \fazmux|LessThan0~3 .lut_mask = "0002";
defparam \fazmux|LessThan0~3 .operation_mode = "normal";
defparam \fazmux|LessThan0~3 .output_mode = "comb_only";
defparam \fazmux|LessThan0~3 .register_cascade_mode = "off";
defparam \fazmux|LessThan0~3 .sum_lutc_input = "datac";
defparam \fazmux|LessThan0~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X4_Y2_N6
maxii_lcell \fazmux|clock_out (
// Equation(s):
// \fazmux|clock_out~regout  = DFFEAS(((\fazmux|clock_out~regout  $ (\fazmux|LessThan0~3_combout ))), GLOBAL(\clk~combout ), VCC, , , , , , )

	.clk(\clk~combout ),
	.dataa(vcc),
	.datab(vcc),
	.datac(\fazmux|clock_out~regout ),
	.datad(\fazmux|LessThan0~3_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(),
	.regout(\fazmux|clock_out~regout ),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \fazmux|clock_out .lut_mask = "0ff0";
defparam \fazmux|clock_out .operation_mode = "normal";
defparam \fazmux|clock_out .output_mode = "reg_only";
defparam \fazmux|clock_out .register_cascade_mode = "off";
defparam \fazmux|clock_out .sum_lutc_input = "datac";
defparam \fazmux|clock_out .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y4_N5
maxii_lcell \multiplexe|disp[0]~1 (
// Equation(s):
// \multiplexe|disp[0]~1_combout  = (\fazmux|clock_out~regout  & (((!\elevador|state.S0~regout )))) # (!\fazmux|clock_out~regout  & (\pessoas|WideOr9~0_combout  & (\multiplexe|disp[0]~0_combout )))

	.clk(gnd),
	.dataa(\pessoas|WideOr9~0_combout ),
	.datab(\multiplexe|disp[0]~0_combout ),
	.datac(\elevador|state.S0~regout ),
	.datad(\fazmux|clock_out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\multiplexe|disp[0]~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \multiplexe|disp[0]~1 .lut_mask = "0f88";
defparam \multiplexe|disp[0]~1 .operation_mode = "normal";
defparam \multiplexe|disp[0]~1 .output_mode = "comb_only";
defparam \multiplexe|disp[0]~1 .register_cascade_mode = "off";
defparam \multiplexe|disp[0]~1 .sum_lutc_input = "datac";
defparam \multiplexe|disp[0]~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y4_N6
maxii_lcell \multiplexe|pessoa[1]~0 (
// Equation(s):
// \multiplexe|pessoa[1]~0_combout  = (!\pessoas|WideOr8~0_combout  & (!\fazmux|clock_out~regout  & (\pessoas|WideOr10~0_combout  $ (\pessoas|WideOr9~0_combout ))))

	.clk(gnd),
	.dataa(\pessoas|WideOr10~0_combout ),
	.datab(\pessoas|WideOr8~0_combout ),
	.datac(\pessoas|WideOr9~0_combout ),
	.datad(\fazmux|clock_out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\multiplexe|pessoa[1]~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \multiplexe|pessoa[1]~0 .lut_mask = "0012";
defparam \multiplexe|pessoa[1]~0 .operation_mode = "normal";
defparam \multiplexe|pessoa[1]~0 .output_mode = "comb_only";
defparam \multiplexe|pessoa[1]~0 .register_cascade_mode = "off";
defparam \multiplexe|pessoa[1]~0 .sum_lutc_input = "datac";
defparam \multiplexe|pessoa[1]~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N3
maxii_lcell \multiplexe|disp[2]~2 (
// Equation(s):
// \multiplexe|disp[2]~2_combout  = (\pessoas|WideOr10~0_combout  & (((!\pessoas|WideOr9~0_combout ))))

	.clk(gnd),
	.dataa(\pessoas|WideOr10~0_combout ),
	.datab(vcc),
	.datac(vcc),
	.datad(\pessoas|WideOr9~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\multiplexe|disp[2]~2_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \multiplexe|disp[2]~2 .lut_mask = "00aa";
defparam \multiplexe|disp[2]~2 .operation_mode = "normal";
defparam \multiplexe|disp[2]~2 .output_mode = "comb_only";
defparam \multiplexe|disp[2]~2 .register_cascade_mode = "off";
defparam \multiplexe|disp[2]~2 .sum_lutc_input = "datac";
defparam \multiplexe|disp[2]~2 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N7
maxii_lcell \multiplexe|disp[2]~3 (
// Equation(s):
// \multiplexe|disp[2]~3_combout  = (\fazmux|clock_out~regout  & (((\elevador|state.S1~regout )))) # (!\fazmux|clock_out~regout  & (\multiplexe|disp[2]~2_combout  & (\pessoas|WideOr8~0_combout )))

	.clk(gnd),
	.dataa(\multiplexe|disp[2]~2_combout ),
	.datab(\fazmux|clock_out~regout ),
	.datac(\pessoas|WideOr8~0_combout ),
	.datad(\elevador|state.S1~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\multiplexe|disp[2]~3_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \multiplexe|disp[2]~3 .lut_mask = "ec20";
defparam \multiplexe|disp[2]~3 .operation_mode = "normal";
defparam \multiplexe|disp[2]~3 .output_mode = "comb_only";
defparam \multiplexe|disp[2]~3 .register_cascade_mode = "off";
defparam \multiplexe|disp[2]~3 .sum_lutc_input = "datac";
defparam \multiplexe|disp[2]~3 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y4_N3
maxii_lcell \multiplexe|disp[3]~4 (
// Equation(s):
// \multiplexe|disp[3]~4_combout  = ((\pessoas|WideOr8~0_combout  & (\pessoas|WideOr9~0_combout  & !\pessoas|WideOr10~0_combout )) # (!\pessoas|WideOr8~0_combout  & (\pessoas|WideOr9~0_combout  $ (!\pessoas|WideOr10~0_combout ))))

	.clk(gnd),
	.dataa(vcc),
	.datab(\pessoas|WideOr8~0_combout ),
	.datac(\pessoas|WideOr9~0_combout ),
	.datad(\pessoas|WideOr10~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\multiplexe|disp[3]~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \multiplexe|disp[3]~4 .lut_mask = "30c3";
defparam \multiplexe|disp[3]~4 .operation_mode = "normal";
defparam \multiplexe|disp[3]~4 .output_mode = "comb_only";
defparam \multiplexe|disp[3]~4 .register_cascade_mode = "off";
defparam \multiplexe|disp[3]~4 .sum_lutc_input = "datac";
defparam \multiplexe|disp[3]~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y4_N2
maxii_lcell \multiplexe|disp[3]~5 (
// Equation(s):
// \multiplexe|disp[3]~5_combout  = ((\fazmux|clock_out~regout  & ((!\elevador|state.S0~regout ))) # (!\fazmux|clock_out~regout  & (\multiplexe|disp[3]~4_combout )))

	.clk(gnd),
	.dataa(\multiplexe|disp[3]~4_combout ),
	.datab(vcc),
	.datac(\elevador|state.S0~regout ),
	.datad(\fazmux|clock_out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\multiplexe|disp[3]~5_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \multiplexe|disp[3]~5 .lut_mask = "0faa";
defparam \multiplexe|disp[3]~5 .operation_mode = "normal";
defparam \multiplexe|disp[3]~5 .output_mode = "comb_only";
defparam \multiplexe|disp[3]~5 .register_cascade_mode = "off";
defparam \multiplexe|disp[3]~5 .sum_lutc_input = "datac";
defparam \multiplexe|disp[3]~5 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y4_N8
maxii_lcell \multiplexe|disp[4]~6 (
// Equation(s):
// \multiplexe|disp[4]~6_combout  = (((\pessoas|WideOr9~0_combout  & !\pessoas|WideOr8~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(vcc),
	.datac(\pessoas|WideOr9~0_combout ),
	.datad(\pessoas|WideOr8~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\multiplexe|disp[4]~6_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \multiplexe|disp[4]~6 .lut_mask = "00f0";
defparam \multiplexe|disp[4]~6 .operation_mode = "normal";
defparam \multiplexe|disp[4]~6 .output_mode = "comb_only";
defparam \multiplexe|disp[4]~6 .register_cascade_mode = "off";
defparam \multiplexe|disp[4]~6 .sum_lutc_input = "datac";
defparam \multiplexe|disp[4]~6 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y4_N4
maxii_lcell \multiplexe|disp[4]~7 (
// Equation(s):
// \multiplexe|disp[4]~7_combout  = (\fazmux|clock_out~regout  & (((!\elevador|state.S1~regout )))) # (!\fazmux|clock_out~regout  & (((\multiplexe|disp[4]~6_combout )) # (!\pessoas|WideOr10~0_combout )))

	.clk(gnd),
	.dataa(\pessoas|WideOr10~0_combout ),
	.datab(\fazmux|clock_out~regout ),
	.datac(\elevador|state.S1~regout ),
	.datad(\multiplexe|disp[4]~6_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\multiplexe|disp[4]~7_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \multiplexe|disp[4]~7 .lut_mask = "3f1d";
defparam \multiplexe|disp[4]~7 .operation_mode = "normal";
defparam \multiplexe|disp[4]~7 .output_mode = "comb_only";
defparam \multiplexe|disp[4]~7 .register_cascade_mode = "off";
defparam \multiplexe|disp[4]~7 .sum_lutc_input = "datac";
defparam \multiplexe|disp[4]~7 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y4_N9
maxii_lcell \multiplexe|disp[5]~8 (
// Equation(s):
// \multiplexe|disp[5]~8_combout  = ((\pessoas|state.S7~regout ) # ((\pessoas|state.S3~regout ) # (\fazmux|clock_out~regout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\pessoas|state.S7~regout ),
	.datac(\pessoas|state.S3~regout ),
	.datad(\fazmux|clock_out~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\multiplexe|disp[5]~8_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \multiplexe|disp[5]~8 .lut_mask = "fffc";
defparam \multiplexe|disp[5]~8 .operation_mode = "normal";
defparam \multiplexe|disp[5]~8 .output_mode = "comb_only";
defparam \multiplexe|disp[5]~8 .register_cascade_mode = "off";
defparam \multiplexe|disp[5]~8 .sum_lutc_input = "datac";
defparam \multiplexe|disp[5]~8 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y4_N7
maxii_lcell \multiplexe|disp[5]~9 (
// Equation(s):
// \multiplexe|disp[5]~9_combout  = (\multiplexe|disp[5]~8_combout ) # ((\pessoas|WideOr8~0_combout  & ((!\pessoas|WideOr9~0_combout ) # (!\pessoas|WideOr10~0_combout ))))

	.clk(gnd),
	.dataa(\pessoas|WideOr10~0_combout ),
	.datab(\pessoas|WideOr8~0_combout ),
	.datac(\pessoas|WideOr9~0_combout ),
	.datad(\multiplexe|disp[5]~8_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\multiplexe|disp[5]~9_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \multiplexe|disp[5]~9 .lut_mask = "ff4c";
defparam \multiplexe|disp[5]~9 .operation_mode = "normal";
defparam \multiplexe|disp[5]~9 .output_mode = "comb_only";
defparam \multiplexe|disp[5]~9 .register_cascade_mode = "off";
defparam \multiplexe|disp[5]~9 .sum_lutc_input = "datac";
defparam \multiplexe|disp[5]~9 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N4
maxii_lcell \multiplexe|disp[6]~10 (
// Equation(s):
// \multiplexe|disp[6]~10_combout  = ((\pessoas|WideOr9~0_combout  & ((\pessoas|WideOr8~0_combout ))) # (!\pessoas|WideOr9~0_combout  & (!\pessoas|WideOr10~0_combout  & !\pessoas|WideOr8~0_combout )))

	.clk(gnd),
	.dataa(vcc),
	.datab(\pessoas|WideOr9~0_combout ),
	.datac(\pessoas|WideOr10~0_combout ),
	.datad(\pessoas|WideOr8~0_combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\multiplexe|disp[6]~10_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \multiplexe|disp[6]~10 .lut_mask = "cc03";
defparam \multiplexe|disp[6]~10 .operation_mode = "normal";
defparam \multiplexe|disp[6]~10 .output_mode = "comb_only";
defparam \multiplexe|disp[6]~10 .register_cascade_mode = "off";
defparam \multiplexe|disp[6]~10 .sum_lutc_input = "datac";
defparam \multiplexe|disp[6]~10 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X5_Y2_N5
maxii_lcell \multiplexe|disp[6]~11 (
// Equation(s):
// \multiplexe|disp[6]~11_combout  = (\fazmux|clock_out~regout  & (!\elevador|state.S0~regout )) # (!\fazmux|clock_out~regout  & (((\multiplexe|disp[6]~10_combout ))))

	.clk(gnd),
	.dataa(\elevador|state.S0~regout ),
	.datab(\fazmux|clock_out~regout ),
	.datac(\multiplexe|disp[6]~10_combout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\multiplexe|disp[6]~11_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \multiplexe|disp[6]~11 .lut_mask = "7474";
defparam \multiplexe|disp[6]~11 .operation_mode = "normal";
defparam \multiplexe|disp[6]~11 .output_mode = "comb_only";
defparam \multiplexe|disp[6]~11 .register_cascade_mode = "off";
defparam \multiplexe|disp[6]~11 .sum_lutc_input = "datac";
defparam \multiplexe|disp[6]~11 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N5
maxii_lcell \porta|saida~0 (
// Equation(s):
// \porta|saida~0_combout  = (((\porta|state.S1~regout )) # (!\porta|state.S0~regout ))

	.clk(gnd),
	.dataa(vcc),
	.datab(\porta|state.S0~regout ),
	.datac(\porta|state.S1~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\porta|saida~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \porta|saida~0 .lut_mask = "f3f3";
defparam \porta|saida~0 .operation_mode = "normal";
defparam \porta|saida~0 .output_mode = "comb_only";
defparam \porta|saida~0 .register_cascade_mode = "off";
defparam \porta|saida~0 .sum_lutc_input = "datac";
defparam \porta|saida~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N2
maxii_lcell \porta|saida~1 (
// Equation(s):
// \porta|saida~1_combout  = (\porta|state.S2~regout ) # (((!\porta|state.S0~regout )))

	.clk(gnd),
	.dataa(\porta|state.S2~regout ),
	.datab(vcc),
	.datac(\porta|state.S0~regout ),
	.datad(vcc),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\porta|saida~1_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \porta|saida~1 .lut_mask = "afaf";
defparam \porta|saida~1 .operation_mode = "normal";
defparam \porta|saida~1 .output_mode = "comb_only";
defparam \porta|saida~1 .register_cascade_mode = "off";
defparam \porta|saida~1 .sum_lutc_input = "datac";
defparam \porta|saida~1 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y1_N5
maxii_lcell \andar|nextstate~0 (
// Equation(s):
// \andar|nextstate~0_combout  = (!\AI2~combout  & (!\AE2~combout  & (!\AE3~combout  & !\AI3~combout )))

	.clk(gnd),
	.dataa(\AI2~combout ),
	.datab(\AE2~combout ),
	.datac(\AE3~combout ),
	.datad(\AI3~combout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\andar|nextstate~0_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \andar|nextstate~0 .lut_mask = "0001";
defparam \andar|nextstate~0 .operation_mode = "normal";
defparam \andar|nextstate~0 .output_mode = "comb_only";
defparam \andar|nextstate~0 .register_cascade_mode = "off";
defparam \andar|nextstate~0 .sum_lutc_input = "datac";
defparam \andar|nextstate~0 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y1_N9
maxii_lcell \andar|mot~4 (
// Equation(s):
// \andar|mot~4_combout  = (!\elevador|always1~0_combout  & (\andar|state.S1~regout  & ((\AE3~combout ) # (\AI3~combout ))))

	.clk(gnd),
	.dataa(\AE3~combout ),
	.datab(\elevador|always1~0_combout ),
	.datac(\AI3~combout ),
	.datad(\andar|state.S1~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\andar|mot~4_combout ),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \andar|mot~4 .lut_mask = "3200";
defparam \andar|mot~4 .operation_mode = "normal";
defparam \andar|mot~4 .output_mode = "comb_only";
defparam \andar|mot~4 .register_cascade_mode = "off";
defparam \andar|mot~4 .sum_lutc_input = "datac";
defparam \andar|mot~4 .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y1_N3
maxii_lcell \andar|mot[0] (
// Equation(s):
// \andar|mot [0] = (\andar|mot~4_combout ) # ((!\andar|nextstate~0_combout  & (\andar|always1~0_combout  & !\andar|state.S0~regout )))

	.clk(gnd),
	.dataa(\andar|nextstate~0_combout ),
	.datab(\andar|mot~4_combout ),
	.datac(\andar|always1~0_combout ),
	.datad(\andar|state.S0~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\andar|mot [0]),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \andar|mot[0] .lut_mask = "ccdc";
defparam \andar|mot[0] .operation_mode = "normal";
defparam \andar|mot[0] .output_mode = "comb_only";
defparam \andar|mot[0] .register_cascade_mode = "off";
defparam \andar|mot[0] .sum_lutc_input = "datac";
defparam \andar|mot[0] .synch_mode = "off";
// synopsys translate_on

// Location: LC_X7_Y2_N9
maxii_lcell \andar|mot[1] (
// Equation(s):
// \andar|mot [1] = (\andar|always1~1_combout  & ((\andar|state.S1~regout ) # ((\andar|mot~3_combout  & \andar|state.S2~regout )))) # (!\andar|always1~1_combout  & (((\andar|mot~3_combout  & \andar|state.S2~regout ))))

	.clk(gnd),
	.dataa(\andar|always1~1_combout ),
	.datab(\andar|state.S1~regout ),
	.datac(\andar|mot~3_combout ),
	.datad(\andar|state.S2~regout ),
	.aclr(gnd),
	.aload(gnd),
	.sclr(gnd),
	.sload(gnd),
	.ena(vcc),
	.cin(gnd),
	.cin0(gnd),
	.cin1(vcc),
	.inverta(gnd),
	.regcascin(gnd),
	.devclrn(devclrn),
	.devpor(devpor),
	.combout(\andar|mot [1]),
	.regout(),
	.cout(),
	.cout0(),
	.cout1());
// synopsys translate_off
defparam \andar|mot[1] .lut_mask = "f888";
defparam \andar|mot[1] .operation_mode = "normal";
defparam \andar|mot[1] .output_mode = "comb_only";
defparam \andar|mot[1] .register_cascade_mode = "off";
defparam \andar|mot[1] .sum_lutc_input = "datac";
defparam \andar|mot[1] .synch_mode = "off";
// synopsys translate_on

// Location: PIN_90,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \disp[0]~I (
	.datain(\multiplexe|disp[0]~1_combout ),
	.oe(vcc),
	.combout(),
	.padio(disp[0]));
// synopsys translate_off
defparam \disp[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_70,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \disp[1]~I (
	.datain(\multiplexe|pessoa[1]~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(disp[1]));
// synopsys translate_off
defparam \disp[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_41,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \disp[2]~I (
	.datain(\multiplexe|disp[2]~3_combout ),
	.oe(vcc),
	.combout(),
	.padio(disp[2]));
// synopsys translate_off
defparam \disp[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_98,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \disp[3]~I (
	.datain(\multiplexe|disp[3]~5_combout ),
	.oe(vcc),
	.combout(),
	.padio(disp[3]));
// synopsys translate_off
defparam \disp[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_100,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \disp[4]~I (
	.datain(\multiplexe|disp[4]~7_combout ),
	.oe(vcc),
	.combout(),
	.padio(disp[4]));
// synopsys translate_off
defparam \disp[4]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_92,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \disp[5]~I (
	.datain(\multiplexe|disp[5]~9_combout ),
	.oe(vcc),
	.combout(),
	.padio(disp[5]));
// synopsys translate_off
defparam \disp[5]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_39,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \disp[6]~I (
	.datain(\multiplexe|disp[6]~11_combout ),
	.oe(vcc),
	.combout(),
	.padio(disp[6]));
// synopsys translate_off
defparam \disp[6]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_96,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \disp[7]~I (
	.datain(vcc),
	.oe(vcc),
	.combout(),
	.padio(disp[7]));
// synopsys translate_off
defparam \disp[7]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_88,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \Y[0]~I (
	.datain(\fazmux|clock_out~regout ),
	.oe(vcc),
	.combout(),
	.padio(Y[0]));
// synopsys translate_off
defparam \Y[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_66,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \Y[1]~I (
	.datain(vcc),
	.oe(vcc),
	.combout(),
	.padio(Y[1]));
// synopsys translate_off
defparam \Y[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_68,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \Y[2]~I (
	.datain(vcc),
	.oe(vcc),
	.combout(),
	.padio(Y[2]));
// synopsys translate_off
defparam \Y[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_37,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \Y[3]~I (
	.datain(!\fazmux|clock_out~regout ),
	.oe(vcc),
	.combout(),
	.padio(Y[3]));
// synopsys translate_off
defparam \Y[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_76,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \C~I (
	.datain(\pessoas|state.S7~regout ),
	.oe(vcc),
	.combout(),
	.padio(C));
// synopsys translate_off
defparam \C~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_54,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \P~I (
	.datain(\porta|state.S3~regout ),
	.oe(vcc),
	.combout(),
	.padio(P));
// synopsys translate_off
defparam \P~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_71,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \port[0]~I (
	.datain(!\porta|saida~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(port[0]));
// synopsys translate_off
defparam \port[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_69,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \port[1]~I (
	.datain(!\porta|saida~1_combout ),
	.oe(vcc),
	.combout(),
	.padio(port[1]));
// synopsys translate_off
defparam \port[1]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_67,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \port[2]~I (
	.datain(!\porta|saida~1_combout ),
	.oe(vcc),
	.combout(),
	.padio(port[2]));
// synopsys translate_off
defparam \port[2]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_61,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \port[3]~I (
	.datain(!\porta|saida~0_combout ),
	.oe(vcc),
	.combout(),
	.padio(port[3]));
// synopsys translate_off
defparam \port[3]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_55,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \saidaMot[0]~I (
	.datain(\andar|mot [0]),
	.oe(vcc),
	.combout(),
	.padio(saidaMot[0]));
// synopsys translate_off
defparam \saidaMot[0]~I .operation_mode = "output";
// synopsys translate_on

// Location: PIN_57,	 I/O Standard: 3.3-V LVTTL,	 Current Strength: 16mA
maxii_io \saidaMot[1]~I (
	.datain(\andar|mot [1]),
	.oe(vcc),
	.combout(),
	.padio(saidaMot[1]));
// synopsys translate_off
defparam \saidaMot[1]~I .operation_mode = "output";
// synopsys translate_on

endmodule
